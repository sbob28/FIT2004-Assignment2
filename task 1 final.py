#submission file
class PrefixTrie:
    def __init__(self):
        """ 
        initializes a prefix trie with four child node placeholders and a location list.
        This trie structure is designed to store sequences made up of characters 'A' to 'D'.

        input:
        there is no input

        output:
        --> creates an empty prefix trie with four child slots (corresponding to letters A-D)
        --> and an empty list to track where sequences start in a larger string.

        complexity analysis:
        time complexity: O(1) because it only involves initializing fixed size attributes.
        space complexity: O(1) because it only allocates space for four pointers and an empty list.
        """

        self.nodes= [None]*4 #intilaises a list of 4 slot for children nodes.
        # a,b,c,d corresponds to each slot 
        self.locations=[]#a list to store locations where each prefix starts in the main string

    def insert(self, location, sequence):

        """
        this method inserts a sequence into the trie with its starting location, building a path through the trie
        for each character in the sequence.

        input:
        location: is an integer representing the starting index of the sequence in the main data.
        sequence: a string of characters to be inserted into the trie.

        output:
        updates the trie by adding nodes corresponding to each character of the sequence.

        complexity analysis
        time complexity- O(M), where M is the length of the sequence. Each character insertion is a constant time operation.
        space complexity: O(M), as in the worst case, a new node might be needed for each character in the sequence.
        """

        current = self #starts from the root node of the trie. iterates over the
        for char in sequence: #iterates over each character in the sequence
            index = ord(char) - ord('A')#calculates the index for the character (assumes only a-d are used)
            if not current.nodes[index]:# checks if there is no trie node or not
                current.nodes[index]=PrefixTrie()#creates a new node if nothing exists 
            current = current.nodes[index] #moves to the node that corresponds to the current character
            if location is not None:#if a valid location is provided then
                current.locations.append(location)#it stores the location in the locations list at this node

    def search(self, pfx):

        """
        this function searches for all occurrences of a given prefix in the trie and returns their starting locations.

        input:
        pfx: String prefix made of characters 'A' to 'D' to search within the trie.

        output
        returns a list of integers indicating where in the main data the prefix starts.

        complexity
        time complexity: O(P), where P is the length of the prefix. Each step moves to a specific child node.
        space complexity: O(1), uses constant space regardless of input size.
        """

        current = self #start from the root node
        for char in pfx: #iterate over each character in the prefix
            index = ord(char) - ord('A')#calculates the index for the character (assumes only a-d are used)
            # checks if there is no trie node or not
            if not current.nodes[index]:
                return[]#return an empty list if the prefix is not found
            current = current.nodes[index] #move to the next node in the path of the prefix
        return current.locations #return the list of locations where the prefix occurs
    
class OrfFinder:
    def __init__(self,genome):

        """
        intialises an OrfFinder for a given genome sequence by creating a PrefixTrie containing all suffixes of the genome.

        input
        genome: String containing the genome sequence.

        output:
        creates an OrfFinder object with a prefix trie loaded with all possible suffixes of the genome.

        complexity
        time complexity: O(N^2), where N is the length of the genome, due to inserting each suffix into the trie.
        space complexity: O(N^2), as each suffix can potentially create a new path in the trie.
        """

        self.genome = genome #stores the entire genome sequence as string
        self.pfx_t = PrefixTrie()#creates the new PrefixTrie obj
        for i in range (len(genome)):# then it iterates over the len of genome
            self.pfx_t.insert(i, genome[i:])#inserts each suffix of the genome starting from each position
    
    def find(self, start, end):

        """
        finds all substrings in the genome that start with 'start' and end with 'end'.

        input:
        start: Starting sequence to look for in the genome.
        end: Ending sequence to look for in the genome.

        output:
        Returns a list of substrings from the genome that start with 'start' (prefix) and end with 'end' (suffix).

        complexity:
        time complexity: O(T + U + V), where T and U are the lengths of 'start' and 'end',
        and V is the total length of all valid substrings found.
        space complexity: O(V), where V is the space needed to store the resulting substrings.
        """

        start_locations = self.pfx_t.search(start)#find all locations where the substring 'start' occurs
        end_locations = self.pfx_t.search(end)#find all locations where the substring 'end' occurs
        result=[]#empty list initialised to store results
        for start_location in start_locations:#loops each start loc
            for end_location in end_locations:#loops each end loc
                if start_location + len(start) <= end_location and self.genome[start_location:end_location + len(end)].endswith(end):
                    # makes sure that the prefix of DNA starts with start sequence and ends with end without any overlapping
                    result.append(self.genome[start_location: end_location+len(end)])
                    #extract the substring from the genome from the start loc to the end of the end sequence
        return result #returns list of all substrings that pass crtieria

#test cases
genome1 = OrfFinder("AAABBBCCC")
print(genome1.find("AAA", "BB"))#["AAABB", "AAABBB"]
print(genome1.find("BB", "A"))  #[]
print(genome1.find("AA", "BC"))#["AABBBC", "AAABBBC"]
print(genome1.find("A", "B"))  # ["AAAB", "AAABB", "AAABBB", "AAB", "AABB", "AABBB", "AB", "ABB", "ABBB"]
print(genome1.find("AA", "A"))#["AAA"]
print(genome1.find("AAAB", "BBB"))# []


if __name__ == "__main__":
    def compare(l1, l2):
        return sorted(l1) == sorted(l2)

    genome1 = OrfFinder("ABCABC")

    print("Test 1:", compare(genome1.find("A", "C"), ['ABC', 'ABC', 'ABCABC']))
    print("Test 2:", compare(genome1.find("A", "B"), ['AB', 'AB', 'ABCAB']))
    print("Test 3:", compare(genome1.find("B", "C"), ['BC', 'BC', 'BCABC']))
    print("Test 4:", compare(genome1.find("C", "A"), ['CA']))
    print("Test 5:", compare(genome1.find("AB", "C"), ['ABC', 'ABC', 'ABCABC']))
    print("Test 6:", compare(genome1.find("C", "C"), ['CABC']))
    print("Test 7:", compare(genome1.find("ABCABC", "ABCABC"), []))

    genome2 = OrfFinder("AAA")

    print("Test 8:", compare(genome2.find("A", "A"), ['AA', 'AA', 'AAA']))



genome = OrfFinder('BCBCACCCB')
assert sorted(genome.find('B', 'A')) == sorted(['BCA', 'BCBCA'])
genome = OrfFinder('BADCABDADB')
assert sorted(genome.find('D', 'C')) == sorted(['DC'])
genome = OrfFinder('CCDDBBACABBBBBCDC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BACA', 'BBA', 'BBACA'])
genome = OrfFinder('ACBBCCCBBAABDCCBDDAC')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DC', 'DCC', 'DCCBDDAC', 'DDAC'])
genome = OrfFinder('BACDA')
assert sorted(genome.find('C', 'A')) == sorted(['CDA'])
genome = OrfFinder('CACACBDACCBBBBD')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CAC', 'CACAC', 'CACACBDAC', 'CACACBDACC', 'CACBDAC', 'CACBDACC', 'CBDAC', 'CBDACC', 'CC'])
genome = OrfFinder('ABBDCCCACCB')
assert sorted(genome.find('B', 'A')) == sorted(['BBDCCCA', 'BDCCCA'])
genome = OrfFinder('CACAAAABCDCBCBCCA')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AA', 'AAA', 'AAA', 'AAAA', 'AAAABCDCBCBCCA', 'AAABCDCBCBCCA', 'AABCDCBCBCCA', 'ABCDCBCBCCA', 'ACA', 'ACAA', 'ACAAA', 'ACAAAA', 'ACAAAABCDCBCBCCA'])
genome = OrfFinder('BCBAACDBDDADD')
assert sorted(genome.find('C', 'C')) == sorted(['CBAAC'])
genome = OrfFinder('CADBCCABBBCBDCC')
assert sorted(genome.find('A', 'D')) == sorted(['ABBBCBD', 'AD', 'ADBCCABBBCBD'])
genome = OrfFinder('ADADDDCBD')
assert sorted(genome.find('D', 'A')) == sorted(['DA'])
genome = OrfFinder('CADCCBDD')
assert sorted(genome.find('A', 'C')) == sorted(['ADC', 'ADCC'])
genome = OrfFinder('CDCDADA')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DCD', 'DCDAD'])
genome = OrfFinder('ABCCAAC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CCA', 'CCAA'])
genome = OrfFinder('ACDCBACC')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACC'])
genome = OrfFinder('BBCCA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CCA'])
genome = OrfFinder('DCCDDCABDDBCDD')
assert sorted(genome.find('A', 'D')) == sorted(['ABD', 'ABDD', 'ABDDBCD', 'ABDDBCDD'])
genome = OrfFinder('DDAA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DAA', 'DDA', 'DDAA'])
genome = OrfFinder('ABCDBCBDDBDDBCABAB')
assert sorted(genome.find('C', 'D')) == sorted(['CBD', 'CBDD', 'CBDDBD', 'CBDDBDD', 'CD', 'CDBCBD', 'CDBCBDD', 'CDBCBDDBD', 'CDBCBDDBDD'])
genome = OrfFinder('ACCDBCCBBBDAADC')
assert sorted(genome.find('A', 'C')) == sorted(['AADC', 'AC', 'ACC', 'ACCDBC', 'ACCDBCC', 'ACCDBCCBBBDAADC', 'ADC'])
genome = OrfFinder('ADCADABACCDAACADCABB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CA', 'CADA', 'CADABA', 'CADABACCDA', 'CADABACCDAA', 'CADABACCDAACA', 'CADABACCDAACADCA', 'CADCA', 'CCDA', 'CCDAA', 'CCDAACA', 'CCDAACADCA', 'CDA', 'CDAA', 'CDAACA', 'CDAACADCA'])
genome = OrfFinder('ABDDBACCA')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABDDB'])
genome = OrfFinder('AAABCBDB')
assert sorted(genome.find('A', 'D')) == sorted(['AAABCBD', 'AABCBD', 'ABCBD'])
genome = OrfFinder('DCABBAAABCCADDAA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DAA', 'DCA', 'DCABBA', 'DCABBAA', 'DCABBAAA', 'DCABBAAABCCA', 'DCABBAAABCCADDA', 'DCABBAAABCCADDAA', 'DDA', 'DDAA'])
genome = OrfFinder('AABACCABAABCDBDAD')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BAA', 'BAABCDBDA', 'BACCA', 'BACCABA', 'BACCABAA', 'BACCABAABCDBDA', 'BCDBDA', 'BDA'])
genome = OrfFinder('CCABCDACCACDCC')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CCAB'])
genome = OrfFinder('BDBBACA')
assert sorted(genome.find('A', 'A')) == sorted(['ACA'])
genome = OrfFinder('ADDBCD')
assert sorted(genome.find('D', 'C')) == sorted(['DBC', 'DDBC'])
genome = OrfFinder('ACABBDACBDCC')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABB', 'ABBDACB', 'ACAB', 'ACABB', 'ACABBDACB', 'ACB'])
genome = OrfFinder('CACADABBCABA')
assert sorted(genome.find('B', 'C')) == sorted(['BBC', 'BC'])
genome = OrfFinder('ADABBDCACBCBCCDD')
assert sorted(genome.find('B', 'A')) == sorted(['BBDCA', 'BDCA'])
genome = OrfFinder('BDDABBCCCADDBACBBBCC')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABB', 'ABBCCCADDB', 'ABBCCCADDBACB', 'ABBCCCADDBACBB', 'ABBCCCADDBACBBB', 'ACB', 'ACBB', 'ACBBB', 'ADDB', 'ADDBACB', 'ADDBACBB', 'ADDBACBBB'])
genome = OrfFinder('BCBBBBAAADBCCAA')
assert sorted(genome.find('C', 'D')) == sorted(['CBBBBAAAD'])
genome = OrfFinder('BCB')
assert sorted(genome.find('B', 'B')) == sorted(['BCB'])
genome = OrfFinder('BAACBBBAABCDCCBBCA')
assert sorted(genome.find('B', 'B')) == sorted(['BAAB', 'BAABCDCCB', 'BAABCDCCBB', 'BAACB', 'BAACBB', 'BAACBBB', 'BAACBBBAAB', 'BAACBBBAABCDCCB', 'BAACBBBAABCDCCBB', 'BB', 'BB', 'BB', 'BBAAB', 'BBAABCDCCB', 'BBAABCDCCBB', 'BBB', 'BBBAAB', 'BBBAABCDCCB', 'BBBAABCDCCBB', 'BCDCCB', 'BCDCCBB'])
genome = OrfFinder('BBBBBACC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BB', 'BB', 'BBB', 'BBB', 'BBB', 'BBBB', 'BBBB', 'BBBBB'])
genome = OrfFinder('DCBDCBBACCAAD')
assert sorted(genome.find('C', 'D')) == sorted(['CAAD', 'CBBACCAAD', 'CBD', 'CBDCBBACCAAD', 'CCAAD'])
genome = OrfFinder('ADBCADABB')
assert sorted(genome.find('C', 'D')) == sorted(['CAD'])
genome = OrfFinder('ADABCDABDAAB')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AB', 'AB', 'AB', 'ABCDAB', 'ABCDABDAAB', 'ABDAAB', 'ADAB', 'ADABCDAB', 'ADABCDABDAAB'])
genome = OrfFinder('ACCCCBBDDACBBDBDCB')
assert sorted(genome.find('C', 'A')) == sorted(['CBBDDA', 'CCBBDDA', 'CCCBBDDA', 'CCCCBBDDA'])
genome = OrfFinder('DCBACACBBCDACDBCAC')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'AC', 'AC', 'AC', 'ACAC', 'ACACBBC', 'ACACBBCDAC', 'ACACBBCDACDBC', 'ACACBBCDACDBCAC', 'ACBBC', 'ACBBCDAC', 'ACBBCDACDBC', 'ACBBCDACDBCAC', 'ACDBC', 'ACDBCAC'])
genome = OrfFinder('ACBDCACCDBBCB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CACC', 'CACCDBBC', 'CBDC', 'CBDCAC', 'CBDCACC', 'CBDCACCDBBC', 'CC', 'CCDBBC', 'CDBBC'])
genome = OrfFinder('BCAAACCBADABBABADAA')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BCAAAC', 'BCAAACC'])
genome = OrfFinder('DCACBBDACABC')
assert sorted(genome.find('A', 'A')) == sorted(['ACA', 'ACBBDA', 'ACBBDACA'])
genome = OrfFinder('CABCDCAABDDCCBDC')
assert sorted(genome.find('C', 'C')) == sorted(['CAABDDC', 'CAABDDCC', 'CAABDDCCBDC', 'CABC', 'CABCDC', 'CABCDCAABDDC', 'CABCDCAABDDCC', 'CABCDCAABDDCCBDC', 'CBDC', 'CC', 'CCBDC', 'CDC', 'CDCAABDDC', 'CDCAABDDCC', 'CDCAABDDCCBDC'])
genome = OrfFinder('DCAADCBCABCDDCDAABB')
assert sorted(genome.find('A', 'C')) == sorted(['AADC', 'AADCBC', 'AADCBCABC', 'AADCBCABCDDC', 'ABC', 'ABCDDC', 'ADC', 'ADCBC', 'ADCBCABC', 'ADCBCABCDDC'])
genome = OrfFinder('CDACBCD')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DACBC'])
genome = OrfFinder('ABDDBACABBDDCACDB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DBACAB', 'DBACABB', 'DBACABBDDCACDB', 'DCACDB', 'DDB', 'DDBACAB', 'DDBACABB', 'DDBACABBDDCACDB', 'DDCACDB'])
genome = OrfFinder('AAABACD')
assert sorted(genome.find('B', 'D')) == sorted(['BACD'])
genome = OrfFinder('AADADCCCDDBDBCCBADC')
assert sorted(genome.find('C', 'D')) == sorted(['CBAD', 'CCBAD', 'CCCD', 'CCCDD', 'CCCDDBD', 'CCCDDBDBCCBAD', 'CCD', 'CCDD', 'CCDDBD', 'CCDDBDBCCBAD', 'CD', 'CDD', 'CDDBD', 'CDDBDBCCBAD'])
genome = OrfFinder('BBADACBDDCB')
assert sorted(genome.find('A', 'B')) == sorted(['ACB', 'ACBDDCB', 'ADACB', 'ADACBDDCB'])
genome = OrfFinder('DADCBBBDBBAC')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADCBBBD', 'DCBBBD'])
genome = OrfFinder('CDBACBADAADBAABCD')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBADAADB', 'CBADAADBAAB', 'CDB', 'CDBACB', 'CDBACBADAADB', 'CDBACBADAADBAAB'])
genome = OrfFinder('ACBBDABDBAAABCBC')
assert sorted(genome.find('A', 'D')) == sorted(['ABD', 'ACBBD', 'ACBBDABD'])
genome = OrfFinder('BDDBBDCBAD')
assert sorted(genome.find('D', 'A')) == sorted(['DBBDCBA', 'DCBA', 'DDBBDCBA'])
genome = OrfFinder('DCAAAAD')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AA', 'AAA', 'AAA', 'AAAA'])
genome = OrfFinder('CABBDCB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABB', 'ABBDCB'])
genome = OrfFinder('ABDCBBDC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BDCB', 'BDCBB'])
genome = OrfFinder('BABADCACDCDABBCCDD')
assert sorted(genome.find('C', 'B')) == sorted(['CACDCDAB', 'CACDCDABB', 'CDAB', 'CDABB', 'CDCDAB', 'CDCDABB'])
genome = OrfFinder('DCAAABACADCDCADCAB')
assert sorted(genome.find('D', 'B')) == sorted(['DCAAAB', 'DCAAABACADCDCADCAB', 'DCAB', 'DCADCAB', 'DCDCADCAB'])
genome = OrfFinder('AACDCCAABBBBB')
assert sorted(genome.find('D', 'A')) == sorted(['DCCA', 'DCCAA'])
genome = OrfFinder('AACCBACACDAADDCB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CACDAADDC', 'CBAC', 'CBACAC', 'CBACACDAADDC', 'CC', 'CCBAC', 'CCBACAC', 'CCBACACDAADDC', 'CDAADDC'])
genome = OrfFinder('ACDBCADCDCADACBDB')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BCADC', 'BCADCDC', 'BCADCDCADAC'])
genome = OrfFinder('DBABADADCDABBAAACCDD')
assert sorted(genome.find('C', 'A')) == sorted(['CDA', 'CDABBA', 'CDABBAA', 'CDABBAAA'])
genome = OrfFinder('DCABBABDDCCDCCBBABAD')
assert sorted(genome.find('D', 'C')) == sorted(['DC', 'DC', 'DC', 'DCABBABDDC', 'DCABBABDDCC', 'DCABBABDDCCDC', 'DCABBABDDCCDCC', 'DCC', 'DCC', 'DCCDC', 'DCCDCC', 'DDC', 'DDCC', 'DDCCDC', 'DDCCDCC'])
genome = OrfFinder('ADBBCBDAD')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBB', 'DBBCB'])
genome = OrfFinder('ACBABADBDDCAB')
assert sorted(genome.find('A', 'C')) == sorted(['ABADBDDC', 'AC', 'ACBABADBDDC', 'ADBDDC'])
genome = OrfFinder('BADCCDCDBD')
assert sorted(genome.find('A', 'C')) == sorted(['ADC', 'ADCC', 'ADCCDC'])
genome = OrfFinder('DCDBCBBACDBDDB')
assert sorted(genome.find('C', 'C')) == sorted(['CBBAC', 'CDBC', 'CDBCBBAC'])
genome = OrfFinder('ABADCAADADCDBCBAB')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DADCDBCBA', 'DBCBA', 'DCA', 'DCAA', 'DCAADA', 'DCAADADCDBCBA', 'DCDBCBA'])
genome = OrfFinder('DCBACBABCDCABABAA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BA', 'BA', 'BAA', 'BABA', 'BABAA', 'BABCDCA', 'BABCDCABA', 'BABCDCABABA', 'BABCDCABABAA', 'BACBA', 'BACBABCDCA', 'BACBABCDCABA', 'BACBABCDCABABA', 'BACBABCDCABABAA', 'BCDCA', 'BCDCABA', 'BCDCABABA', 'BCDCABABAA'])
genome = OrfFinder('DCBABD')
assert sorted(genome.find('B', 'D')) == sorted(['BABD', 'BD'])
genome = OrfFinder('ADABAADACCCDBDD')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BAA', 'BAADA'])
genome = OrfFinder('CABBDCDCABDDCBB')
assert sorted(genome.find('B', 'C')) == sorted(['BBDC', 'BBDCDC', 'BBDCDCABDDC', 'BDC', 'BDCDC', 'BDCDCABDDC', 'BDDC'])
genome = OrfFinder('BDAACABCCDDBDABBBA')
assert sorted(genome.find('D', 'B')) == sorted(['DAACAB', 'DAACABCCDDB', 'DAACABCCDDBDAB', 'DAACABCCDDBDABB', 'DAACABCCDDBDABBB', 'DAB', 'DABB', 'DABBB', 'DB', 'DBDAB', 'DBDABB', 'DBDABBB', 'DDB', 'DDBDAB', 'DDBDABB', 'DDBDABBB'])
genome = OrfFinder('AACDDCADDBDCAADADC')
assert sorted(genome.find('C', 'D')) == sorted(['CAAD', 'CAADAD', 'CAD', 'CADD', 'CADDBD', 'CADDBDCAAD', 'CADDBDCAADAD', 'CD', 'CDD', 'CDDCAD', 'CDDCADD', 'CDDCADDBD', 'CDDCADDBDCAAD', 'CDDCADDBDCAADAD'])
genome = OrfFinder('BDBAABABDC')
assert sorted(genome.find('A', 'D')) == sorted(['AABABD', 'ABABD', 'ABD'])
genome = OrfFinder('BCBCDBAACDAC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DBA', 'DBAA', 'DBAACDA'])
genome = OrfFinder('ABCADBDCBB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBDCB', 'DBDCBB', 'DCB', 'DCBB'])
genome = OrfFinder('BADCCADD')
assert sorted(genome.find('B', 'C')) == sorted(['BADC', 'BADCC'])
genome = OrfFinder('BBDACDACCCDCADCBDBDB')
assert sorted(genome.find('C', 'B')) == sorted(['CADCB', 'CADCBDB', 'CADCBDBDB', 'CB', 'CBDB', 'CBDBDB', 'CCCDCADCB', 'CCCDCADCBDB', 'CCCDCADCBDBDB', 'CCDCADCB', 'CCDCADCBDB', 'CCDCADCBDBDB', 'CDACCCDCADCB', 'CDACCCDCADCBDB', 'CDACCCDCADCBDBDB', 'CDCADCB', 'CDCADCBDB', 'CDCADCBDBDB'])
genome = OrfFinder('CABABBABBABCB')
assert sorted(genome.find('B', 'B')) == sorted(['BAB', 'BAB', 'BAB', 'BABB', 'BABB', 'BABBAB', 'BABBAB', 'BABBABB', 'BABBABBAB', 'BABBABBABCB', 'BABBABCB', 'BABCB', 'BB', 'BB', 'BBAB', 'BBAB', 'BBABB', 'BBABBAB', 'BBABBABCB', 'BBABCB', 'BCB'])
genome = OrfFinder('AACBACABD')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BACA'])
genome = OrfFinder('CDCDDDACCAABCCBABD')
assert sorted(genome.find('A', 'D')) == sorted(['AABCCBABD', 'ABCCBABD', 'ABD', 'ACCAABCCBABD'])
genome = OrfFinder('CBCACBD')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CBC', 'CBCAC'])
genome = OrfFinder('BCBBCCDACBCABBBAD')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DACBCA', 'DACBCABBBA'])
genome = OrfFinder('DACAADCBCBABCA')
assert sorted(genome.find('C', 'B')) == sorted(['CAADCB', 'CAADCBCB', 'CAADCBCBAB', 'CB', 'CB', 'CBAB', 'CBCB', 'CBCBAB'])
genome = OrfFinder('DDBDADDDBCADDDCA')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADD', 'CADDD'])
genome = OrfFinder('BDAAADCBABDA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BABDA', 'BDA', 'BDA', 'BDAA', 'BDAAA', 'BDAAADCBA', 'BDAAADCBABDA'])
genome = OrfFinder('BDDACBDDBBDBABCCAD')
assert sorted(genome.find('A', 'D')) == sorted(['ABCCAD', 'ACBD', 'ACBDD', 'ACBDDBBD', 'ACBDDBBDBABCCAD', 'AD'])
genome = OrfFinder('BDCDDBBBDABAC')
assert sorted(genome.find('A', 'B')) == sorted(['AB'])
genome = OrfFinder('CCDDCDDACDDADDBCCA')
assert sorted(genome.find('D', 'D')) == sorted(['DACD', 'DACDD', 'DACDDAD', 'DACDDADD', 'DAD', 'DADD', 'DCD', 'DCDD', 'DCDDACD', 'DCDDACDD', 'DCDDACDDAD', 'DCDDACDDADD', 'DD', 'DD', 'DD', 'DD', 'DDACD', 'DDACDD', 'DDACDDAD', 'DDACDDADD', 'DDAD', 'DDADD', 'DDCD', 'DDCDD', 'DDCDDACD', 'DDCDDACDD', 'DDCDDACDDAD', 'DDCDDACDDADD'])
genome = OrfFinder('BBDDCDCAACDABCCB')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DABCCB', 'DCAACDAB', 'DCAACDABCCB', 'DCDCAACDAB', 'DCDCAACDABCCB', 'DDCDCAACDAB', 'DDCDCAACDABCCB'])
genome = OrfFinder('CBDACBCBCABBAAC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BCAB', 'BCABB', 'BCB', 'BCBCAB', 'BCBCABB', 'BDACB', 'BDACBCB', 'BDACBCBCAB', 'BDACBCBCABB'])
genome = OrfFinder('DAABCBBBCCCCCDDCBBAA')
assert sorted(genome.find('B', 'D')) == sorted(['BBBCCCCCD', 'BBBCCCCCDD', 'BBCCCCCD', 'BBCCCCCDD', 'BCBBBCCCCCD', 'BCBBBCCCCCDD', 'BCCCCCD', 'BCCCCCDD'])
genome = OrfFinder('DBDDBABCCAAABA')
assert sorted(genome.find('D', 'A')) == sorted(['DBA', 'DBABCCA', 'DBABCCAA', 'DBABCCAAA', 'DBABCCAAABA', 'DBDDBA', 'DBDDBABCCA', 'DBDDBABCCAA', 'DBDDBABCCAAA', 'DBDDBABCCAAABA', 'DDBA', 'DDBABCCA', 'DDBABCCAA', 'DDBABCCAAA', 'DDBABCCAAABA'])
genome = OrfFinder('DCDBA')
assert sorted(genome.find('B', 'A')) == sorted(['BA'])
genome = OrfFinder('DAACBBDAADBCDABCCDD')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBB', 'CBBDAADB', 'CBBDAADBCDAB', 'CDAB'])
genome = OrfFinder('CCDCBCAADDDBCCDB')
assert sorted(genome.find('A', 'C')) == sorted(['AADDDBC', 'AADDDBCC', 'ADDDBC', 'ADDDBCC'])
genome = OrfFinder('ABBAAADBDDBBCA')
assert sorted(genome.find('B', 'B')) == sorted(['BAAADB', 'BAAADBDDB', 'BAAADBDDBB', 'BB', 'BB', 'BBAAADB', 'BBAAADBDDB', 'BBAAADBDDBB', 'BDDB', 'BDDBB'])
genome = OrfFinder('DCBAABCCBDCBCCDDDD')
assert sorted(genome.find('C', 'D')) == sorted(['CBAABCCBD', 'CBAABCCBDCBCCD', 'CBAABCCBDCBCCDD', 'CBAABCCBDCBCCDDD', 'CBAABCCBDCBCCDDDD', 'CBCCD', 'CBCCDD', 'CBCCDDD', 'CBCCDDDD', 'CBD', 'CBDCBCCD', 'CBDCBCCDD', 'CBDCBCCDDD', 'CBDCBCCDDDD', 'CCBD', 'CCBDCBCCD', 'CCBDCBCCDD', 'CCBDCBCCDDD', 'CCBDCBCCDDDD', 'CCD', 'CCDD', 'CCDDD', 'CCDDDD', 'CD', 'CDD', 'CDDD', 'CDDDD'])
genome = OrfFinder('DBADCC')
assert sorted(genome.find('B', 'D')) == sorted(['BAD'])
genome = OrfFinder('CDB')
assert sorted(genome.find('C', 'D')) == sorted(['CD'])
genome = OrfFinder('BDDDAAADDCCBCC')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AAA'])
genome = OrfFinder('ADADABCAABCBACBC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CAABCBA', 'CBA'])
genome = OrfFinder('BAACDACCCCBCDDCAC')
assert sorted(genome.find('B', 'B')) == sorted(['BAACDACCCCB'])
genome = OrfFinder('CDDAAACCAAADAC')
assert sorted(genome.find('D', 'C')) == sorted(['DAAAC', 'DAAACC', 'DAAACCAAADAC', 'DAC', 'DDAAAC', 'DDAAACC', 'DDAAACCAAADAC'])
genome = OrfFinder('CABABCCBDBACB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBACB'])
genome = OrfFinder('DCCCDAAA')
assert sorted(genome.find('D', 'D')) == sorted(['DCCCD'])
genome = OrfFinder('AAB')
assert sorted(genome.find('A', 'A')) == sorted(['AA'])
genome = OrfFinder('BCACBCBDCBACA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CACBCBDCBA', 'CACBCBDCBACA', 'CBA', 'CBACA', 'CBCBDCBA', 'CBCBDCBACA', 'CBDCBA', 'CBDCBACA'])
genome = OrfFinder('BBCCADCABD')
assert sorted(genome.find('B', 'C')) == sorted(['BBC', 'BBCC', 'BBCCADC', 'BC', 'BCC', 'BCCADC'])
genome = OrfFinder('DCBDACDBCCBA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BCCBA', 'BDA', 'BDACDBCCBA'])
genome = OrfFinder('ACDCCBBBABAB')
assert sorted(genome.find('D', 'A')) == sorted(['DCCBBBA', 'DCCBBBABA'])
genome = OrfFinder('BAACBDCBB')
assert sorted(genome.find('A', 'D')) == sorted(['AACBD', 'ACBD'])
genome = OrfFinder('CABDDCBCDDCABCD')
assert sorted(genome.find('A', 'C')) == sorted(['ABC', 'ABDDC', 'ABDDCBC', 'ABDDCBCDDC', 'ABDDCBCDDCABC'])
genome = OrfFinder('DDDDABCDCDBBBDA')
assert sorted(genome.find('A', 'C')) == sorted(['ABC', 'ABCDC'])
genome = OrfFinder('BDCAADBBAADAADAABAC')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AAD', 'AAD', 'AADAAD', 'AADBBAAD', 'AADBBAADAAD', 'AD', 'AD', 'AD', 'ADAAD', 'ADBBAAD', 'ADBBAADAAD'])
genome = OrfFinder('DCCBBADABADBAABD')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBB', 'CBBADAB', 'CBBADABADB', 'CBBADABADBAAB', 'CCB', 'CCBB', 'CCBBADAB', 'CCBBADABADB', 'CCBBADABADBAAB'])
genome = OrfFinder('BDCACCBAB')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BDCA', 'BDCACCBA'])
genome = OrfFinder('CCCDBDACDBBC')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'ACDBBC'])
genome = OrfFinder('DCADCCD')
assert sorted(genome.find('C', 'C')) == sorted(['CADC', 'CADCC', 'CC'])
genome = OrfFinder('ACDBBCBABBDBCDAC')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBABBDBCDA', 'CDA', 'CDBBCBA', 'CDBBCBABBDBCDA'])
genome = OrfFinder('ADCCDBACCDAADBDBBDCD')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BACCDA', 'BACCDAA'])
genome = OrfFinder('BABDDABCCCDC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BABDDA', 'BDDA'])
genome = OrfFinder('BCBADDAAACDBDD')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBADDA', 'CBADDAA', 'CBADDAAA'])
genome = OrfFinder('AAAADBACAADDBBBCBAB')
assert sorted(genome.find('A', 'B')) == sorted(['AAAADB', 'AAAADBACAADDB', 'AAAADBACAADDBB', 'AAAADBACAADDBBB', 'AAAADBACAADDBBBCB', 'AAAADBACAADDBBBCBAB', 'AAADB', 'AAADBACAADDB', 'AAADBACAADDBB', 'AAADBACAADDBBB', 'AAADBACAADDBBBCB', 'AAADBACAADDBBBCBAB', 'AADB', 'AADBACAADDB', 'AADBACAADDBB', 'AADBACAADDBBB', 'AADBACAADDBBBCB', 'AADBACAADDBBBCBAB', 'AADDB', 'AADDBB', 'AADDBBB', 'AADDBBBCB', 'AADDBBBCBAB', 'AB', 'ACAADDB', 'ACAADDBB', 'ACAADDBBB', 'ACAADDBBBCB', 'ACAADDBBBCBAB', 'ADB', 'ADBACAADDB', 'ADBACAADDBB', 'ADBACAADDBBB', 'ADBACAADDBBBCB', 'ADBACAADDBBBCBAB', 'ADDB', 'ADDBB', 'ADDBBB', 'ADDBBBCB', 'ADDBBBCBAB'])
genome = OrfFinder('BDCCCCB')
assert sorted(genome.find('B', 'B')) == sorted(['BDCCCCB'])
genome = OrfFinder('ABDBADBBDCABADBADDDD')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DB', 'DBADB', 'DBADBB', 'DBADBBDCAB', 'DBADBBDCABADB', 'DBB', 'DBBDCAB', 'DBBDCABADB', 'DCAB', 'DCABADB'])
genome = OrfFinder('DDBACBDACBBDCDCBBB')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'AC', 'ACBBDC', 'ACBBDCDC', 'ACBDAC', 'ACBDACBBDC', 'ACBDACBBDCDC'])
genome = OrfFinder('BCDADCCBD')
assert sorted(genome.find('D', 'B')) == sorted(['DADCCB', 'DCCB'])
genome = OrfFinder('DACDCDBDBCAD')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CD', 'CD', 'CDBD', 'CDBDBCAD', 'CDCD', 'CDCDBD', 'CDCDBDBCAD'])
genome = OrfFinder('ACDDBCBBDDCCDBABDDDA')
assert sorted(genome.find('B', 'C')) == sorted(['BBDDC', 'BBDDCC', 'BC', 'BCBBDDC', 'BCBBDDCC', 'BDDC', 'BDDCC'])
genome = OrfFinder('CBACACCBDACCCDDBCBC')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACAC', 'BACACC', 'BACACCBDAC', 'BACACCBDACC', 'BACACCBDACCC', 'BACACCBDACCCDDBC', 'BACACCBDACCCDDBCBC', 'BC', 'BC', 'BCBC', 'BDAC', 'BDACC', 'BDACCC', 'BDACCCDDBC', 'BDACCCDDBCBC'])
genome = OrfFinder('ACBABBCBDDADCADDCD')
assert sorted(genome.find('B', 'D')) == sorted(['BABBCBD', 'BABBCBDD', 'BABBCBDDAD', 'BABBCBDDADCAD', 'BABBCBDDADCADD', 'BABBCBDDADCADDCD', 'BBCBD', 'BBCBDD', 'BBCBDDAD', 'BBCBDDADCAD', 'BBCBDDADCADD', 'BBCBDDADCADDCD', 'BCBD', 'BCBDD', 'BCBDDAD', 'BCBDDADCAD', 'BCBDDADCADD', 'BCBDDADCADDCD', 'BD', 'BDD', 'BDDAD', 'BDDADCAD', 'BDDADCADD', 'BDDADCADDCD'])
genome = OrfFinder('BDDDCBBCBABCBADABA')
assert sorted(genome.find('A', 'A')) == sorted(['ABA', 'ABCBA', 'ABCBADA', 'ABCBADABA', 'ADA', 'ADABA'])
genome = OrfFinder('CCCBBABBBACDABCDB')
assert sorted(genome.find('A', 'D')) == sorted(['ABBBACD', 'ABBBACDABCD', 'ABCD', 'ACD', 'ACDABCD'])
genome = OrfFinder('BBABDDBBBAB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBB', 'DBBB', 'DBBBAB', 'DDB', 'DDBB', 'DDBBB', 'DDBBBAB'])
genome = OrfFinder('CCCAAACDDBDCDCBBDB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CAAA', 'CCA', 'CCAA', 'CCAAA', 'CCCA', 'CCCAA', 'CCCAAA'])
genome = OrfFinder('DCB')
assert sorted(genome.find('D', 'C')) == sorted(['DC'])
genome = OrfFinder('BCDACCBCB')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'ACC', 'ACCBC'])
genome = OrfFinder('ACCBAAACA')
assert sorted(genome.find('C', 'C')) == sorted(['CBAAAC', 'CC', 'CCBAAAC'])
genome = OrfFinder('BDDCBAABCBDDAABA')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AAB', 'AABCB', 'AABCBDDAAB', 'AB', 'AB', 'ABCB', 'ABCBDDAAB'])
genome = OrfFinder('CCADDABAADBCDDD')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CADDA', 'CADDABA', 'CADDABAA', 'CCA', 'CCADDA', 'CCADDABA', 'CCADDABAA'])
genome = OrfFinder('ADAABBBCBAD')
assert sorted(genome.find('D', 'C')) == sorted(['DAABBBC'])
genome = OrfFinder('CABAACAAC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CAA', 'CABA', 'CABAA', 'CABAACA', 'CABAACAA'])
genome = OrfFinder('CBDBBAAACACADACD')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AAA', 'AAACA', 'AAACACA', 'AAACACADA', 'AACA', 'AACACA', 'AACACADA', 'ACA', 'ACA', 'ACACA', 'ACACADA', 'ACADA', 'ADA'])
genome = OrfFinder('BABCDA')
assert sorted(genome.find('A', 'C')) == sorted(['ABC'])
genome = OrfFinder('DDBBBCBCADAD')
assert sorted(genome.find('C', 'B')) == sorted(['CB'])
genome = OrfFinder('CBAADBCDABACABCB')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DABACAB', 'DABACABCB', 'DB', 'DBCDAB', 'DBCDABACAB', 'DBCDABACABCB'])
genome = OrfFinder('CDBAACCAACCAACCDC')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AA', 'AACCA', 'AACCA', 'AACCAA', 'AACCAA', 'AACCAACCA', 'AACCAACCAA', 'ACCA', 'ACCA', 'ACCAA', 'ACCAA', 'ACCAACCA', 'ACCAACCAA'])
genome = OrfFinder('BDDCDBACAADBAACBBCD')
assert sorted(genome.find('A', 'C')) == sorted(['AAC', 'AACBBC', 'AADBAAC', 'AADBAACBBC', 'AC', 'AC', 'ACAADBAAC', 'ACAADBAACBBC', 'ACBBC', 'ADBAAC', 'ADBAACBBC'])
genome = OrfFinder('BBBBCBBACCDAABDBBABB')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'ACC'])
genome = OrfFinder('CADAADB')
assert sorted(genome.find('C', 'B')) == sorted(['CADAADB'])
genome = OrfFinder('AABBBAABCBABDDC')
assert sorted(genome.find('C', 'A')) == sorted(['CBA'])
genome = OrfFinder('DBDBBDCDADCADBABACB')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADCAD', 'DBBD', 'DBBDCD', 'DBBDCDAD', 'DBBDCDADCAD', 'DBD', 'DBDBBD', 'DBDBBDCD', 'DBDBBDCDAD', 'DBDBBDCDADCAD', 'DCAD', 'DCD', 'DCDAD', 'DCDADCAD'])
genome = OrfFinder('DCDCCAAACADDDDC')
assert sorted(genome.find('A', 'D')) == sorted(['AAACAD', 'AAACADD', 'AAACADDD', 'AAACADDDD', 'AACAD', 'AACADD', 'AACADDD', 'AACADDDD', 'ACAD', 'ACADD', 'ACADDD', 'ACADDDD', 'AD', 'ADD', 'ADDD', 'ADDDD'])
genome = OrfFinder('BCADBACBDCACACA')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACBDC', 'BACBDCAC', 'BACBDCACAC', 'BC', 'BCADBAC', 'BCADBACBDC', 'BCADBACBDCAC', 'BCADBACBDCACAC', 'BDC', 'BDCAC', 'BDCACAC'])
genome = OrfFinder('DDBDADCABCAAA')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ADCAB'])
genome = OrfFinder('BACBDBDCBBACA')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBDCB', 'DBDCBB', 'DCB', 'DCBB'])
genome = OrfFinder('BDADACDBCCCABCABCDBC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CABCA', 'CCA', 'CCABCA', 'CCCA', 'CCCABCA', 'CDBCCCA', 'CDBCCCABCA'])
genome = OrfFinder('BDADBCDDDBABCDCA')
assert sorted(genome.find('C', 'D')) == sorted(['CD', 'CD', 'CDD', 'CDDD', 'CDDDBABCD'])
genome = OrfFinder('BCBDCCABCAC')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CB', 'CBDCCAB', 'CCAB'])
genome = OrfFinder('CCDACABDBBACBD')
assert sorted(genome.find('C', 'C')) == sorted(['CABDBBAC', 'CC', 'CCDAC', 'CCDACABDBBAC', 'CDAC', 'CDACABDBBAC'])
genome = OrfFinder('AABDC')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AB'])
genome = OrfFinder('BCDBAADDBACACBBADB')
assert sorted(genome.find('B', 'C')) == sorted(['BAADDBAC', 'BAADDBACAC', 'BAC', 'BACAC', 'BC', 'BCDBAADDBAC', 'BCDBAADDBACAC'])
genome = OrfFinder('DCCDCBBCCBADABDDC')
assert sorted(genome.find('D', 'D')) == sorted(['DABD', 'DABDD', 'DCBBCCBAD', 'DCBBCCBADABD', 'DCBBCCBADABDD', 'DCCD', 'DCCDCBBCCBAD', 'DCCDCBBCCBADABD', 'DCCDCBBCCBADABDD', 'DD'])
genome = OrfFinder('AACCAD')
assert sorted(genome.find('C', 'C')) == sorted(['CC'])
genome = OrfFinder('CCDDBBDCBDABAD')
assert sorted(genome.find('C', 'C')) == sorted(['CC', 'CCDDBBDC', 'CDDBBDC'])
genome = OrfFinder('DBADDCDDCDADCCBBDAC')
assert sorted(genome.find('C', 'D')) == sorted(['CBBD', 'CCBBD', 'CD', 'CD', 'CDAD', 'CDADCCBBD', 'CDD', 'CDDCD', 'CDDCDAD', 'CDDCDADCCBBD'])
genome = OrfFinder('DDDBCDABCDDDDABABB')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BC', 'BCDABC'])
genome = OrfFinder('ADDCDDABACDDAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'AB', 'ABACDDAB', 'ACDDAB', 'ADDCDDAB', 'ADDCDDABACDDAB'])
genome = OrfFinder('DCBAADACABA')
assert sorted(genome.find('B', 'D')) == sorted(['BAAD'])
genome = OrfFinder('AADAAAD')
assert sorted(genome.find('A', 'D')) == sorted(['AAAD', 'AAD', 'AAD', 'AADAAAD', 'AD', 'AD', 'ADAAAD'])
genome = OrfFinder('CBCDADBAABBBADBC')
assert sorted(genome.find('C', 'D')) == sorted(['CBCD', 'CBCDAD', 'CBCDADBAABBBAD', 'CD', 'CDAD', 'CDADBAABBBAD'])
genome = OrfFinder('AADCACDCAACADACCBBB')
assert sorted(genome.find('C', 'D')) == sorted(['CAACAD', 'CACD', 'CACDCAACAD', 'CAD', 'CD', 'CDCAACAD'])
genome = OrfFinder('CBAAABDDBA')
assert sorted(genome.find('C', 'D')) == sorted(['CBAAABD', 'CBAAABDD'])
genome = OrfFinder('ACACCCBBDBBAADAB')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'AC', 'ACAC', 'ACACC', 'ACACCC', 'ACC', 'ACCC'])
genome = OrfFinder('CBCBAA')
assert sorted(genome.find('B', 'C')) == sorted(['BC'])
genome = OrfFinder('ADCBBDDCCBBC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BBDDCCB', 'BBDDCCBB', 'BDDCCB', 'BDDCCBB'])
genome = OrfFinder('ABBDDBCDADAADBCBBDAB')
assert sorted(genome.find('C', 'C')) == sorted(['CDADAADBC'])
genome = OrfFinder('BDBBDAADAACDBCCABD')
assert sorted(genome.find('A', 'C')) == sorted(['AAC', 'AACDBC', 'AACDBCC', 'AADAAC', 'AADAACDBC', 'AADAACDBCC', 'AC', 'ACDBC', 'ACDBCC', 'ADAAC', 'ADAACDBC', 'ADAACDBCC'])
genome = OrfFinder('BACCABBBDCDBDBADC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BACCA', 'BACCABBBDCDBDBA', 'BBBDCDBDBA', 'BBDCDBDBA', 'BDBA', 'BDCDBDBA'])
genome = OrfFinder('CDBCCBADAABADC')
assert sorted(genome.find('D', 'C')) == sorted(['DAABADC', 'DBC', 'DBCC', 'DBCCBADAABADC', 'DC'])
genome = OrfFinder('DDCABDBBBAD')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBB', 'DBBB', 'DCAB', 'DCABDB', 'DCABDBB', 'DCABDBBB', 'DDCAB', 'DDCABDB', 'DDCABDBB', 'DDCABDBBB'])
genome = OrfFinder('ACADAADCDDADB')
assert sorted(genome.find('D', 'D')) == sorted(['DAAD', 'DAADCD', 'DAADCDD', 'DAADCDDAD', 'DAD', 'DCD', 'DCDD', 'DCDDAD', 'DD', 'DDAD'])
genome = OrfFinder('ACCBDB')
assert sorted(genome.find('A', 'C')) == sorted(['AC', 'ACC'])
genome = OrfFinder('DDAABDAACCDAB')
assert sorted(genome.find('D', 'C')) == sorted(['DAABDAAC', 'DAABDAACC', 'DAAC', 'DAACC', 'DDAABDAAC', 'DDAABDAACC'])
genome = OrfFinder('DABDCCDBBB')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BBB', 'BDCCDB', 'BDCCDBB', 'BDCCDBBB'])
genome = OrfFinder('DABBBC')
assert sorted(genome.find('D', 'C')) == sorted(['DABBBC'])
genome = OrfFinder('CCCABDDCDDA')
assert sorted(genome.find('D', 'C')) == sorted(['DC', 'DDC'])
genome = OrfFinder('ADBCA')
assert sorted(genome.find('D', 'B')) == sorted(['DB'])
genome = OrfFinder('ACBADBCDBBDCCCB')
assert sorted(genome.find('D', 'D')) == sorted(['DBBD', 'DBCD', 'DBCDBBD'])
genome = OrfFinder('BDACDCADBACADBABAC')
assert sorted(genome.find('B', 'C')) == sorted(['BABAC', 'BAC', 'BAC', 'BACADBABAC', 'BDAC', 'BDACDC', 'BDACDCADBAC', 'BDACDCADBACADBABAC'])
genome = OrfFinder('BCDBBDBBBDBCABBCBBCA')
assert sorted(genome.find('B', 'C')) == sorted(['BBBDBC', 'BBBDBCABBC', 'BBBDBCABBCBBC', 'BBC', 'BBC', 'BBCBBC', 'BBDBBBDBC', 'BBDBBBDBCABBC', 'BBDBBBDBCABBCBBC', 'BBDBC', 'BBDBCABBC', 'BBDBCABBCBBC', 'BC', 'BC', 'BC', 'BC', 'BCABBC', 'BCABBCBBC', 'BCBBC', 'BCDBBDBBBDBC', 'BCDBBDBBBDBCABBC', 'BCDBBDBBBDBCABBCBBC', 'BDBBBDBC', 'BDBBBDBCABBC', 'BDBBBDBCABBCBBC', 'BDBC', 'BDBCABBC', 'BDBCABBCBBC'])
genome = OrfFinder('CADAC')
assert sorted(genome.find('D', 'A')) == sorted(['DA'])
genome = OrfFinder('CDCBBACADDADBADDDB')
assert sorted(genome.find('B', 'B')) == sorted(['BACADDADB', 'BACADDADBADDDB', 'BADDDB', 'BB', 'BBACADDADB', 'BBACADDADBADDDB'])
genome = OrfFinder('AADBCCDDDABDABDB')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AADBCCD', 'AADBCCDD', 'AADBCCDDD', 'AADBCCDDDABD', 'AADBCCDDDABDABD', 'ABD', 'ABD', 'ABDABD', 'AD', 'ADBCCD', 'ADBCCDD', 'ADBCCDDD', 'ADBCCDDDABD', 'ADBCCDDDABDABD'])
genome = OrfFinder('CBCABDBABDABDBBC')
assert sorted(genome.find('A', 'A')) == sorted(['ABDA', 'ABDBA', 'ABDBABDA'])
genome = OrfFinder('DABADDBCACCACBA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CACBA', 'CACCA', 'CACCACBA', 'CBA', 'CCA', 'CCACBA'])
genome = OrfFinder('DCCADBDDABAC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CADBDDA', 'CADBDDABA', 'CCA', 'CCADBDDA', 'CCADBDDABA'])
genome = OrfFinder('DDDCAACCACACDAB')
assert sorted(genome.find('A', 'C')) == sorted(['AAC', 'AACC', 'AACCAC', 'AACCACAC', 'AC', 'AC', 'AC', 'ACAC', 'ACC', 'ACCAC', 'ACCACAC'])
genome = OrfFinder('DCABCACAD')
assert sorted(genome.find('A', 'A')) == sorted(['ABCA', 'ABCACA', 'ACA'])
genome = OrfFinder('DDDBBDABCDBBCDACBCC')
assert sorted(genome.find('B', 'D')) == sorted(['BBCD', 'BBD', 'BBDABCD', 'BBDABCDBBCD', 'BCD', 'BCD', 'BCDBBCD', 'BD', 'BDABCD', 'BDABCDBBCD'])
genome = OrfFinder('BBBDABCABDAAADBDAB')
assert sorted(genome.find('A', 'C')) == sorted(['ABC'])
genome = OrfFinder('AABDDCBACABCDA')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CB', 'CBACAB'])
genome = OrfFinder('BDBDACBDABCDAD')
assert sorted(genome.find('A', 'D')) == sorted(['ABCD', 'ABCDAD', 'ACBD', 'ACBDABCD', 'ACBDABCDAD', 'AD'])
genome = OrfFinder('BBBCDBAACBB')
assert sorted(genome.find('C', 'A')) == sorted(['CDBA', 'CDBAA'])
genome = OrfFinder('BABDCBADBBDBACAC')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CBADBBDBAC', 'CBADBBDBACAC'])
genome = OrfFinder('DADDDBBDAABDABB')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AABDAB', 'AABDABB', 'AB', 'AB', 'ABB', 'ABDAB', 'ABDABB', 'ADDDB', 'ADDDBB', 'ADDDBBDAAB', 'ADDDBBDAABDAB', 'ADDDBBDAABDABB'])
genome = OrfFinder('ADBACCBAC')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBACCB'])
genome = OrfFinder('BCCCBCAACDBBCAAA')
assert sorted(genome.find('A', 'D')) == sorted(['AACD', 'ACD'])
genome = OrfFinder('CAACAADBDBBBACC')
assert sorted(genome.find('A', 'B')) == sorted(['AACAADB', 'AACAADBDB', 'AACAADBDBB', 'AACAADBDBBB', 'AADB', 'AADBDB', 'AADBDBB', 'AADBDBBB', 'ACAADB', 'ACAADBDB', 'ACAADBDBB', 'ACAADBDBBB', 'ADB', 'ADBDB', 'ADBDBB', 'ADBDBBB'])
genome = OrfFinder('AABACBCDABBBC')
assert sorted(genome.find('B', 'D')) == sorted(['BACBCD', 'BCD'])
genome = OrfFinder('DBCBBBACC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BBB', 'BCB', 'BCBB', 'BCBBB'])
genome = OrfFinder('ACBDCCDACDDAA')
assert sorted(genome.find('D', 'D')) == sorted(['DACD', 'DACDD', 'DCCD', 'DCCDACD', 'DCCDACDD', 'DD'])
genome = OrfFinder('CDB')
assert sorted(genome.find('D', 'B')) == sorted(['DB'])
genome = OrfFinder('CDCDDBBDBBCDDAADAD')
assert sorted(genome.find('C', 'A')) == sorted(['CDCDDBBDBBCDDA', 'CDCDDBBDBBCDDAA', 'CDCDDBBDBBCDDAADA', 'CDDA', 'CDDAA', 'CDDAADA', 'CDDBBDBBCDDA', 'CDDBBDBBCDDAA', 'CDDBBDBBCDDAADA'])
genome = OrfFinder('CCDCACDBDBCDCDAD')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DBCD', 'DBCDCD', 'DBCDCDAD', 'DBD', 'DBDBCD', 'DBDBCDCD', 'DBDBCDCDAD', 'DCACD', 'DCACDBD', 'DCACDBDBCD', 'DCACDBDBCDCD', 'DCACDBDBCDCDAD', 'DCD', 'DCDAD'])
genome = OrfFinder('CCDADDBBCCDBCABCBAA')
assert sorted(genome.find('B', 'C')) == sorted(['BBC', 'BBCC', 'BBCCDBC', 'BBCCDBCABC', 'BC', 'BC', 'BC', 'BCABC', 'BCC', 'BCCDBC', 'BCCDBCABC'])
genome = OrfFinder('BDDDACDDBC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DDA', 'DDDA'])
genome = OrfFinder('DBCADAAADABCAABA')
assert sorted(genome.find('D', 'C')) == sorted(['DAAADABC', 'DABC', 'DBC', 'DBCADAAADABC'])
genome = OrfFinder('CDABBDDAAACBB')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BBDDAAACB', 'BBDDAAACBB', 'BDDAAACB', 'BDDAAACBB'])
genome = OrfFinder('BCCAADABDDBBABDAACBA')
assert sorted(genome.find('C', 'C')) == sorted(['CAADABDDBBABDAAC', 'CC', 'CCAADABDDBBABDAAC'])
genome = OrfFinder('DADBDDBC')
assert sorted(genome.find('A', 'C')) == sorted(['ADBDDBC'])
genome = OrfFinder('AADBCCCDB')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BCC', 'BCCC'])
genome = OrfFinder('BCCBDCDBC')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DCDB'])
genome = OrfFinder('BCDCBDBADDCCDACCBCD')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DACC', 'DACCBC', 'DBADDC', 'DBADDCC', 'DBADDCCDAC', 'DBADDCCDACC', 'DBADDCCDACCBC', 'DC', 'DC', 'DCBDBADDC', 'DCBDBADDCC', 'DCBDBADDCCDAC', 'DCBDBADDCCDACC', 'DCBDBADDCCDACCBC', 'DCC', 'DCCDAC', 'DCCDACC', 'DCCDACCBC', 'DDC', 'DDCC', 'DDCCDAC', 'DDCCDACC', 'DDCCDACCBC'])
genome = OrfFinder('ACCCABACCCAACDC')
assert sorted(genome.find('D', 'C')) == sorted(['DC'])
genome = OrfFinder('BDBDBBAADDAADABACBA')
assert sorted(genome.find('B', 'B')) == sorted(['BAADDAADAB', 'BAADDAADABACB', 'BACB', 'BB', 'BBAADDAADAB', 'BBAADDAADABACB', 'BDB', 'BDB', 'BDBB', 'BDBBAADDAADAB', 'BDBBAADDAADABACB', 'BDBDB', 'BDBDBB', 'BDBDBBAADDAADAB', 'BDBDBBAADDAADABACB'])
genome = OrfFinder('BDBDAADCADCCCACACDD')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AADCA', 'AADCADCCCA', 'AADCADCCCACA', 'ACA', 'ADCA', 'ADCADCCCA', 'ADCADCCCACA', 'ADCCCA', 'ADCCCACA'])
genome = OrfFinder('ACBBB')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BBB'])
genome = OrfFinder('CACDBB')
assert sorted(genome.find('A', 'B')) == sorted(['ACDB', 'ACDBB'])
genome = OrfFinder('CCDDBD')
assert sorted(genome.find('C', 'C')) == sorted(['CC'])
genome = OrfFinder('DBBDABBCCDADDCABAB')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BBCCDA', 'BBCCDADDCA', 'BBCCDADDCABA', 'BBDA', 'BBDABBCCDA', 'BBDABBCCDADDCA', 'BBDABBCCDADDCABA', 'BCCDA', 'BCCDADDCA', 'BCCDADDCABA', 'BDA', 'BDABBCCDA', 'BDABBCCDADDCA', 'BDABBCCDADDCABA'])
genome = OrfFinder('BACB')
assert sorted(genome.find('B', 'A')) == sorted(['BA'])
genome = OrfFinder('BABCABBCCCDA')
assert sorted(genome.find('C', 'D')) == sorted(['CABBCCCD', 'CCCD', 'CCD', 'CD'])
genome = OrfFinder('BBDCCBADDCDAAC')
assert sorted(genome.find('D', 'C')) == sorted(['DAAC', 'DC', 'DC', 'DCC', 'DCCBADDC', 'DCCBADDCDAAC', 'DCDAAC', 'DDC', 'DDCDAAC'])
genome = OrfFinder('ACDDDCDAD')
assert sorted(genome.find('C', 'D')) == sorted(['CD', 'CD', 'CDAD', 'CDD', 'CDDD', 'CDDDCD', 'CDDDCDAD'])
genome = OrfFinder('ACCAACBACB')
assert sorted(genome.find('B', 'B')) == sorted(['BACB'])
genome = OrfFinder('ADBAAAADCBD')
assert sorted(genome.find('A', 'C')) == sorted(['AAAADC', 'AAADC', 'AADC', 'ADBAAAADC', 'ADC'])
genome = OrfFinder('BACA')
assert sorted(genome.find('C', 'A')) == sorted(['CA'])
genome = OrfFinder('BAACBCADABCDB')
assert sorted(genome.find('C', 'B')) == sorted(['CADAB', 'CADABCDB', 'CB', 'CBCADAB', 'CBCADABCDB', 'CDB'])
genome = OrfFinder('ACCACABDACDDCDDCCAAA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DACDDCDDCCA', 'DACDDCDDCCAA', 'DACDDCDDCCAAA', 'DCCA', 'DCCAA', 'DCCAAA', 'DCDDCCA', 'DCDDCCAA', 'DCDDCCAAA', 'DDCCA', 'DDCCAA', 'DDCCAAA', 'DDCDDCCA', 'DDCDDCCAA', 'DDCDDCCAAA'])
genome = OrfFinder('DDAACCBADDBCAACADBCA')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AACA', 'AACADBCA', 'AACCBA', 'AACCBADDBCA', 'AACCBADDBCAA', 'AACCBADDBCAACA', 'AACCBADDBCAACADBCA', 'ACA', 'ACADBCA', 'ACCBA', 'ACCBADDBCA', 'ACCBADDBCAA', 'ACCBADDBCAACA', 'ACCBADDBCAACADBCA', 'ADBCA', 'ADDBCA', 'ADDBCAA', 'ADDBCAACA', 'ADDBCAACADBCA'])
genome = OrfFinder('BBABABCDBDADADCC')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DAD', 'DADAD', 'DBD', 'DBDAD', 'DBDADAD'])
genome = OrfFinder('BBDCBCADABD')
assert sorted(genome.find('B', 'C')) == sorted(['BBDC', 'BBDCBC', 'BC', 'BDC', 'BDCBC'])
genome = OrfFinder('ADBACDADBD')
assert sorted(genome.find('D', 'C')) == sorted(['DBAC'])
genome = OrfFinder('BBABDACAABCCCADDBD')
assert sorted(genome.find('C', 'B')) == sorted(['CAAB', 'CAABCCCADDB', 'CADDB', 'CCADDB', 'CCCADDB'])
genome = OrfFinder('CADDDCCABCDDBABBCC')
assert sorted(genome.find('A', 'A')) == sorted(['ABCDDBA', 'ADDDCCA', 'ADDDCCABCDDBA'])
genome = OrfFinder('AAACADBADADBCBAD')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADBCBAD', 'DBAD', 'DBADAD', 'DBADADBCBAD', 'DBCBAD'])
genome = OrfFinder('DBCBABBDCCDACBBBDADC')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CB', 'CBAB', 'CBABB', 'CBABBDCCDACB', 'CBABBDCCDACBB', 'CBABBDCCDACBBB', 'CBB', 'CBBB', 'CCDACB', 'CCDACBB', 'CCDACBBB', 'CDACB', 'CDACBB', 'CDACBBB'])
genome = OrfFinder('BDADDC')
assert sorted(genome.find('A', 'D')) == sorted(['AD', 'ADD'])
genome = OrfFinder('ABCDCADCDBAB')
assert sorted(genome.find('C', 'B')) == sorted(['CADCDB', 'CADCDBAB', 'CDB', 'CDBAB', 'CDCADCDB', 'CDCADCDBAB'])
genome = OrfFinder('ADCCDB')
assert sorted(genome.find('C', 'D')) == sorted(['CCD', 'CD'])
genome = OrfFinder('ADCDDDCCCBADCBDBCA')
assert sorted(genome.find('B', 'D')) == sorted(['BAD', 'BADCBD', 'BD'])
genome = OrfFinder('DCCBACACCBCB')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACAC', 'BACACC', 'BACACCBC', 'BC'])
genome = OrfFinder('DCBC')
assert sorted(genome.find('D', 'B')) == sorted(['DCB'])
genome = OrfFinder('CCAADBBDDDBAABCBC')
assert sorted(genome.find('C', 'C')) == sorted(['CAADBBDDDBAABC', 'CAADBBDDDBAABCBC', 'CBC', 'CC', 'CCAADBBDDDBAABC', 'CCAADBBDDDBAABCBC'])
genome = OrfFinder('ACABCBDADCCBB')
assert sorted(genome.find('D', 'B')) == sorted(['DADCCB', 'DADCCBB', 'DCCB', 'DCCBB'])
genome = OrfFinder('ABDAADACACCDABBCCAA')
assert sorted(genome.find('A', 'B')) == sorted(['AADACACCDAB', 'AADACACCDABB', 'AB', 'AB', 'ABB', 'ABDAADACACCDAB', 'ABDAADACACCDABB', 'ACACCDAB', 'ACACCDABB', 'ACCDAB', 'ACCDABB', 'ADACACCDAB', 'ADACACCDABB'])
genome = OrfFinder('ADDCBDADC')
assert sorted(genome.find('C', 'A')) == sorted(['CBDA'])
genome = OrfFinder('CCAADADDB')
assert sorted(genome.find('C', 'D')) == sorted(['CAAD', 'CAADAD', 'CAADADD', 'CCAAD', 'CCAADAD', 'CCAADADD'])
genome = OrfFinder('AACBBADACBDCDBB')
assert sorted(genome.find('C', 'D')) == sorted(['CBBAD', 'CBBADACBD', 'CBBADACBDCD', 'CBD', 'CBDCD', 'CD'])
genome = OrfFinder('ACDBDCAA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CDBDCA', 'CDBDCAA'])
genome = OrfFinder('ACBBCBBCCACDBD')
assert sorted(genome.find('A', 'A')) == sorted(['ACBBCBBCCA'])
genome = OrfFinder('ADDDABACB')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DABACB', 'DDAB', 'DDABACB', 'DDDAB', 'DDDABACB'])
genome = OrfFinder('ADBADCBCCCABDBBD')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DBADCB', 'DBADCBCCCAB', 'DBADCBCCCABDB', 'DBADCBCCCABDBB', 'DBB', 'DCB', 'DCBCCCAB', 'DCBCCCABDB', 'DCBCCCABDBB'])
genome = OrfFinder('AABBDBBCCCBACA')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AABBDBBCCCBA', 'AABBDBBCCCBACA', 'ABBDBBCCCBA', 'ABBDBBCCCBACA', 'ACA'])
genome = OrfFinder('BDDCACBBDA')
assert sorted(genome.find('B', 'C')) == sorted(['BDDC', 'BDDCAC'])
genome = OrfFinder('DCBACBDADCBDDAB')
assert sorted(genome.find('B', 'D')) == sorted(['BACBD', 'BACBDAD', 'BACBDADCBD', 'BACBDADCBDD', 'BD', 'BD', 'BDAD', 'BDADCBD', 'BDADCBDD', 'BDD'])
genome = OrfFinder('DCBCBACCBBA')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACC', 'BC', 'BCBAC', 'BCBACC'])
genome = OrfFinder('CACBADAAACA')
assert sorted(genome.find('C', 'D')) == sorted(['CACBAD', 'CBAD'])
genome = OrfFinder('DD')
assert sorted(genome.find('D', 'D')) == sorted(['DD'])
genome = OrfFinder('DAACDBBDCC')
assert sorted(genome.find('A', 'A')) == sorted(['AA'])
genome = OrfFinder('BDDAABDCCCCBAADCAADA')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CCB', 'CCCB', 'CCCCB'])
genome = OrfFinder('ADACBCDB')
assert sorted(genome.find('A', 'B')) == sorted(['ACB', 'ACBCDB', 'ADACB', 'ADACBCDB'])
genome = OrfFinder('DDBCDCADDBCAAA')
assert sorted(genome.find('D', 'C')) == sorted(['DBC', 'DBC', 'DBCDC', 'DBCDCADDBC', 'DC', 'DCADDBC', 'DDBC', 'DDBC', 'DDBCDC', 'DDBCDCADDBC'])
genome = OrfFinder('CDAADBDACADACCBBACD')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AADBDA', 'AADBDACA', 'AADBDACADA', 'AADBDACADACCBBA', 'ACA', 'ACADA', 'ACADACCBBA', 'ACCBBA', 'ADA', 'ADACCBBA', 'ADBDA', 'ADBDACA', 'ADBDACADA', 'ADBDACADACCBBA'])
genome = OrfFinder('DDABDBCDADBDABCABAA')
assert sorted(genome.find('D', 'D')) == sorted(['DABD', 'DABDBCD', 'DABDBCDAD', 'DABDBCDADBD', 'DAD', 'DADBD', 'DBCD', 'DBCDAD', 'DBCDADBD', 'DBD', 'DD', 'DDABD', 'DDABDBCD', 'DDABDBCDAD', 'DDABDBCDADBD'])
genome = OrfFinder('BDADDCBAD')
assert sorted(genome.find('B', 'B')) == sorted(['BDADDCB'])
genome = OrfFinder('BDDDCBADAACDDDBD')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBADAACDDDB', 'CDDDB'])
genome = OrfFinder('CBBDAAB')
assert sorted(genome.find('D', 'B')) == sorted(['DAAB'])
genome = OrfFinder('CCDCAADC')
assert sorted(genome.find('A', 'C')) == sorted(['AADC', 'ADC'])
genome = OrfFinder('ADADCACBADAAA')
assert sorted(genome.find('A', 'B')) == sorted(['ACB', 'ADADCACB', 'ADCACB'])
genome = OrfFinder('DCADDDDADCBDBD')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADCBD', 'DADCBDBD', 'DBD', 'DCAD', 'DCADD', 'DCADDD', 'DCADDDD', 'DCADDDDAD', 'DCADDDDADCBD', 'DCADDDDADCBDBD', 'DCBD', 'DCBDBD', 'DD', 'DD', 'DD', 'DDAD', 'DDADCBD', 'DDADCBDBD', 'DDD', 'DDD', 'DDDAD', 'DDDADCBD', 'DDDADCBDBD', 'DDDD', 'DDDDAD', 'DDDDADCBD', 'DDDDADCBDBD'])
genome = OrfFinder('BADBBBCBABDBABDBBDD')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBABDBA'])
genome = OrfFinder('BDDA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DDA'])
genome = OrfFinder('BCDADCABBBBADCCDD')
assert sorted(genome.find('A', 'A')) == sorted(['ABBBBA', 'ADCA', 'ADCABBBBA'])
genome = OrfFinder('DDBDDAB')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DB', 'DBDDAB', 'DDAB', 'DDB', 'DDBDDAB'])
genome = OrfFinder('CACDACDABCDCACA')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DACDAB'])
genome = OrfFinder('DCDDDDDBBCACCDADACA')
assert sorted(genome.find('B', 'A')) == sorted(['BBCA', 'BBCACCDA', 'BBCACCDADA', 'BBCACCDADACA', 'BCA', 'BCACCDA', 'BCACCDADA', 'BCACCDADACA'])
genome = OrfFinder('ADABDBDAABDBDD')
assert sorted(genome.find('D', 'B')) == sorted(['DAAB', 'DAABDB', 'DAB', 'DABDB', 'DABDBDAAB', 'DABDBDAABDB', 'DB', 'DB', 'DBDAAB', 'DBDAABDB'])
genome = OrfFinder('ADBABCADC')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ADB', 'ADBAB'])
genome = OrfFinder('AABBDCCABDCC')
assert sorted(genome.find('A', 'D')) == sorted(['AABBD', 'AABBDCCABD', 'ABBD', 'ABBDCCABD', 'ABD'])
genome = OrfFinder('ABBADACA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BADA', 'BADACA', 'BBA', 'BBADA', 'BBADACA'])
genome = OrfFinder('BABDBAABDADCDADBCAA')
assert sorted(genome.find('D', 'B')) == sorted(['DADB', 'DADCDADB', 'DB', 'DB', 'DBAAB', 'DBAABDADCDADB', 'DCDADB'])
genome = OrfFinder('CADBCBCDA')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADBCBCD', 'CBCD', 'CD'])
genome = OrfFinder('BBDAAAAADDDBCABCDDA')
assert sorted(genome.find('B', 'C')) == sorted(['BBDAAAAADDDBC', 'BBDAAAAADDDBCABC', 'BC', 'BC', 'BCABC', 'BDAAAAADDDBC', 'BDAAAAADDDBCABC'])
genome = OrfFinder('ACBADBBADBACDDBBCAC')
assert sorted(genome.find('D', 'D')) == sorted(['DBACD', 'DBACDD', 'DBBAD', 'DBBADBACD', 'DBBADBACDD', 'DD'])
genome = OrfFinder('CBBABAC')
assert sorted(genome.find('A', 'C')) == sorted(['ABAC', 'AC'])
genome = OrfFinder('DCADAAACAADAACACBBCA')
assert sorted(genome.find('D', 'C')) == sorted(['DAAAC', 'DAAACAADAAC', 'DAAACAADAACAC', 'DAAACAADAACACBBC', 'DAAC', 'DAACAC', 'DAACACBBC', 'DC', 'DCADAAAC', 'DCADAAACAADAAC', 'DCADAAACAADAACAC', 'DCADAAACAADAACACBBC'])
genome = OrfFinder('DCDABABABD')
assert sorted(genome.find('A', 'D')) == sorted(['ABABABD', 'ABABD', 'ABD'])
genome = OrfFinder('DDBDCDCADADCBDBCD')
assert sorted(genome.find('B', 'D')) == sorted(['BCD', 'BD', 'BD', 'BDBCD', 'BDCD', 'BDCDCAD', 'BDCDCADAD', 'BDCDCADADCBD', 'BDCDCADADCBDBCD'])
genome = OrfFinder('CCCACCCAABCCDBC')
assert sorted(genome.find('B', 'D')) == sorted(['BCCD'])
genome = OrfFinder('BCBABDCBA')
assert sorted(genome.find('C', 'C')) == sorted(['CBABDC'])
genome = OrfFinder('AACBDABDDBBABACAADD')
assert sorted(genome.find('D', 'C')) == sorted(['DABDDBBABAC', 'DBBABAC', 'DDBBABAC'])
genome = OrfFinder('DAADDBABBBBCDDADBA')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AADD', 'AADDBABBBBCD', 'AADDBABBBBCDD', 'AADDBABBBBCDDAD', 'ABBBBCD', 'ABBBBCDD', 'ABBBBCDDAD', 'AD', 'AD', 'ADD', 'ADDBABBBBCD', 'ADDBABBBBCDD', 'ADDBABBBBCDDAD'])
genome = OrfFinder('DCDDACCCBDBCBDCABC')
assert sorted(genome.find('A', 'D')) == sorted(['ACCCBD', 'ACCCBDBCBD'])
genome = OrfFinder('DBDDBCACADCBCBBCBDAD')
assert sorted(genome.find('A', 'A')) == sorted(['ACA', 'ACADCBCBBCBDA', 'ADCBCBBCBDA'])
genome = OrfFinder('CBCCACDDDCCACBCCCB')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BC', 'BCC', 'BCC', 'BCCAC', 'BCCACDDDC', 'BCCACDDDCC', 'BCCACDDDCCAC', 'BCCACDDDCCACBC', 'BCCACDDDCCACBCC', 'BCCACDDDCCACBCCC', 'BCCC'])
genome = OrfFinder('ABBBDDDCCCCDBBB')
assert sorted(genome.find('B', 'C')) == sorted(['BBBDDDC', 'BBBDDDCC', 'BBBDDDCCC', 'BBBDDDCCCC', 'BBDDDC', 'BBDDDCC', 'BBDDDCCC', 'BBDDDCCCC', 'BDDDC', 'BDDDCC', 'BDDDCCC', 'BDDDCCCC'])
genome = OrfFinder('CACBAB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC'])
genome = OrfFinder('DDDDAAABBCDADAADACD')
assert sorted(genome.find('C', 'C')) == sorted(['CDADAADAC'])
genome = OrfFinder('DAAADBAABBBCBBACCDDA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BAA', 'BAABBBCBBA', 'BAABBBCBBACCDDA', 'BACCDDA', 'BBA', 'BBACCDDA', 'BBBCBBA', 'BBBCBBACCDDA', 'BBCBBA', 'BBCBBACCDDA', 'BCBBA', 'BCBBACCDDA'])
genome = OrfFinder('CDBDBDBD')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DB', 'DBDB', 'DBDB', 'DBDBDB'])
genome = OrfFinder('ABDDDAAACACDDCCABBCD')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CACDDCCAB', 'CACDDCCABB', 'CCAB', 'CCABB', 'CDDCCAB', 'CDDCCABB'])
genome = OrfFinder('ACDBCCCDAA')
assert sorted(genome.find('A', 'B')) == sorted(['ACDB'])
genome = OrfFinder('DABABBAADDCCBA')
assert sorted(genome.find('B', 'B')) == sorted(['BAADDCCB', 'BAB', 'BABB', 'BABBAADDCCB', 'BB', 'BBAADDCCB'])
genome = OrfFinder('CBBADA')
assert sorted(genome.find('A', 'D')) == sorted(['AD'])
genome = OrfFinder('DCBADAACABDDCDDBB')
assert sorted(genome.find('D', 'D')) == sorted(['DAACABD', 'DAACABDD', 'DAACABDDCD', 'DAACABDDCDD', 'DCBAD', 'DCBADAACABD', 'DCBADAACABDD', 'DCBADAACABDDCD', 'DCBADAACABDDCDD', 'DCD', 'DCDD', 'DD', 'DD', 'DDCD', 'DDCDD'])
genome = OrfFinder('ABCBCBA')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABCB', 'ABCBCB'])
genome = OrfFinder('ACADDADCBCD')
assert sorted(genome.find('C', 'B')) == sorted(['CADDADCB', 'CB'])
genome = OrfFinder('CDCAACBCAACACBAB')
assert sorted(genome.find('A', 'C')) == sorted(['AAC', 'AAC', 'AACAC', 'AACBC', 'AACBCAAC', 'AACBCAACAC', 'AC', 'AC', 'AC', 'ACAC', 'ACBC', 'ACBCAAC', 'ACBCAACAC'])
genome = OrfFinder('BABA')
assert sorted(genome.find('A', 'B')) == sorted(['AB'])
genome = OrfFinder('ACDCABBCDA')
assert sorted(genome.find('A', 'C')) == sorted(['ABBC', 'AC', 'ACDC', 'ACDCABBC'])
genome = OrfFinder('AADBCACBDBADBBDDB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC'])
genome = OrfFinder('CCDDDBAABCDCCD')
assert sorted(genome.find('C', 'C')) == sorted(['CC', 'CC', 'CCDDDBAABC', 'CCDDDBAABCDC', 'CCDDDBAABCDCC', 'CDC', 'CDCC', 'CDDDBAABC', 'CDDDBAABCDC', 'CDDDBAABCDCC'])
genome = OrfFinder('DAAAABCCCBCAABADBDBD')
assert sorted(genome.find('C', 'D')) == sorted(['CAABAD', 'CAABADBD', 'CAABADBDBD', 'CBCAABAD', 'CBCAABADBD', 'CBCAABADBDBD', 'CCBCAABAD', 'CCBCAABADBD', 'CCBCAABADBDBD', 'CCCBCAABAD', 'CCCBCAABADBD', 'CCCBCAABADBDBD'])
genome = OrfFinder('CADBABDADDDACC')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DACC', 'DADDDAC', 'DADDDACC', 'DBABDADDDAC', 'DBABDADDDACC', 'DDAC', 'DDACC', 'DDDAC', 'DDDACC'])
genome = OrfFinder('BADCBABDCCDCDD')
assert sorted(genome.find('A', 'C')) == sorted(['ABDC', 'ABDCC', 'ABDCCDC', 'ADC', 'ADCBABDC', 'ADCBABDCC', 'ADCBABDCCDC'])
genome = OrfFinder('DCACACCBAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ACACCB', 'ACACCBAB', 'ACCB', 'ACCBAB'])
genome = OrfFinder('BBBADBCCCCCDBBAC')
assert sorted(genome.find('B', 'D')) == sorted(['BAD', 'BADBCCCCCD', 'BBAD', 'BBADBCCCCCD', 'BBBAD', 'BBBADBCCCCCD', 'BCCCCCD'])
genome = OrfFinder('DADB')
assert sorted(genome.find('D', 'B')) == sorted(['DADB', 'DB'])
genome = OrfFinder('AABBDDBB')
assert sorted(genome.find('A', 'D')) == sorted(['AABBD', 'AABBDD', 'ABBD', 'ABBDD'])
genome = OrfFinder('CABDCBAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'AB', 'ABDCB', 'ABDCBAB'])
genome = OrfFinder('DABCADDBAAC')
assert sorted(genome.find('C', 'B')) == sorted(['CADDB'])
genome = OrfFinder('CDADBACCACCBBBBCB')
assert sorted(genome.find('B', 'C')) == sorted(['BAC', 'BACC', 'BACCAC', 'BACCACC', 'BACCACCBBBBC', 'BBBBC', 'BBBC', 'BBC', 'BC'])
genome = OrfFinder('DCCBBBDDBCD')
assert sorted(genome.find('B', 'C')) == sorted(['BBBDDBC', 'BBDDBC', 'BC', 'BDDBC'])
genome = OrfFinder('CCA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CCA'])
genome = OrfFinder('ABDAACBADC')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AACBA', 'ABDA', 'ABDAA', 'ABDAACBA', 'ACBA'])
genome = OrfFinder('CDADBCBCCBABDBDA')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CB', 'CBAB', 'CBABDB', 'CBCCB', 'CBCCBAB', 'CBCCBABDB', 'CCB', 'CCBAB', 'CCBABDB', 'CDADB', 'CDADBCB', 'CDADBCBCCB', 'CDADBCBCCBAB', 'CDADBCBCCBABDB'])
genome = OrfFinder('BABBBAADBDBCADDDA')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AADBD', 'AADBDBCAD', 'AADBDBCADD', 'AADBDBCADDD', 'ABBBAAD', 'ABBBAADBD', 'ABBBAADBDBCAD', 'ABBBAADBDBCADD', 'ABBBAADBDBCADDD', 'AD', 'AD', 'ADBD', 'ADBDBCAD', 'ADBDBCADD', 'ADBDBCADDD', 'ADD', 'ADDD'])
genome = OrfFinder('CCDABAACBABCDCCB')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DABA', 'DABAA', 'DABAACBA'])
genome = OrfFinder('CDDABDCACBDCBBBBDAB')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BB', 'BBB', 'BBB', 'BBBB', 'BBBBDAB', 'BBBDAB', 'BBDAB', 'BDAB', 'BDCACB', 'BDCACBDCB', 'BDCACBDCBB', 'BDCACBDCBBB', 'BDCACBDCBBBB', 'BDCACBDCBBBBDAB', 'BDCB', 'BDCBB', 'BDCBBB', 'BDCBBBB', 'BDCBBBBDAB'])
genome = OrfFinder('BACCDBBCCDBBCDDA')
assert sorted(genome.find('C', 'C')) == sorted(['CC', 'CC', 'CCDBBC', 'CCDBBC', 'CCDBBCC', 'CCDBBCCDBBC', 'CDBBC', 'CDBBC', 'CDBBCC', 'CDBBCCDBBC'])
genome = OrfFinder('CBCBDBDDCAADBDABBCDC')
assert sorted(genome.find('D', 'C')) == sorted(['DABBC', 'DABBCDC', 'DBDABBC', 'DBDABBCDC', 'DBDDC', 'DBDDCAADBDABBC', 'DBDDCAADBDABBCDC', 'DC', 'DC', 'DCAADBDABBC', 'DCAADBDABBCDC', 'DDC', 'DDCAADBDABBC', 'DDCAADBDABBCDC'])
genome = OrfFinder('ADCCAABBCBABACBBCCC')
assert sorted(genome.find('C', 'C')) == sorted(['CAABBC', 'CAABBCBABAC', 'CAABBCBABACBBC', 'CAABBCBABACBBCC', 'CAABBCBABACBBCCC', 'CBABAC', 'CBABACBBC', 'CBABACBBCC', 'CBABACBBCCC', 'CBBC', 'CBBCC', 'CBBCCC', 'CC', 'CC', 'CC', 'CCAABBC', 'CCAABBCBABAC', 'CCAABBCBABACBBC', 'CCAABBCBABACBBCC', 'CCAABBCBABACBBCCC', 'CCC'])
genome = OrfFinder('CCDBBACCBDDBBD')
assert sorted(genome.find('B', 'B')) == sorted(['BACCB', 'BACCBDDB', 'BACCBDDBB', 'BB', 'BB', 'BBACCB', 'BBACCBDDB', 'BBACCBDDBB', 'BDDB', 'BDDBB'])
genome = OrfFinder('ABADBAABBBDD')
assert sorted(genome.find('D', 'D')) == sorted(['DBAABBBD', 'DBAABBBDD', 'DD'])
genome = OrfFinder('ABBBCBBDBDCCBABA')
assert sorted(genome.find('D', 'D')) == sorted(['DBD'])
genome = OrfFinder('AADABBBBABDD')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AADABBBBABD', 'AADABBBBABDD', 'ABBBBABD', 'ABBBBABDD', 'ABD', 'ABDD', 'AD', 'ADABBBBABD', 'ADABBBBABDD'])
genome = OrfFinder('ABDAACBCCCBADCBC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DAA', 'DAACBCCCBA'])
genome = OrfFinder('DCDBACACB')
assert sorted(genome.find('A', 'A')) == sorted(['ACA'])
genome = OrfFinder('DBBCDBDA')
assert sorted(genome.find('B', 'A')) == sorted(['BBCDBDA', 'BCDBDA', 'BDA'])
genome = OrfFinder('DCBABACBCBC')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBABA'])
genome = OrfFinder('ADDACDDBBC')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DACDDBBC', 'DBBC', 'DDAC', 'DDACDDBBC', 'DDBBC'])
genome = OrfFinder('ACDBABDACC')
assert sorted(genome.find('A', 'D')) == sorted(['ABD', 'ACD', 'ACDBABD'])
genome = OrfFinder('ADADDACACADBBAC')
assert sorted(genome.find('A', 'A')) == sorted(['ACA', 'ACA', 'ACACA', 'ACACADBBA', 'ACADBBA', 'ADA', 'ADADDA', 'ADADDACA', 'ADADDACACA', 'ADADDACACADBBA', 'ADBBA', 'ADDA', 'ADDACA', 'ADDACACA', 'ADDACACADBBA'])
genome = OrfFinder('CABDDCACBBDA')
assert sorted(genome.find('B', 'C')) == sorted(['BDDC', 'BDDCAC'])
genome = OrfFinder('DBBCDCCDCCDBAABDDDB')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BAA', 'BBCDCCDCCDBA', 'BBCDCCDCCDBAA', 'BCDCCDCCDBA', 'BCDCCDCCDBAA'])
genome = OrfFinder('BCCACDBCBCCBBDBAD')
assert sorted(genome.find('D', 'A')) == sorted(['DBA', 'DBCBCCBBDBA'])
genome = OrfFinder('B')
assert sorted(genome.find('A', 'A')) == sorted([])
genome = OrfFinder('CDDCDBCDBDBBABC')
assert sorted(genome.find('D', 'C')) == sorted(['DBBABC', 'DBC', 'DBCDBDBBABC', 'DBDBBABC', 'DC', 'DCDBC', 'DCDBCDBDBBABC', 'DDC', 'DDCDBC', 'DDCDBCDBDBBABC'])
genome = OrfFinder('BCCADBBACDCAD')
assert sorted(genome.find('D', 'A')) == sorted(['DBBA', 'DBBACDCA', 'DCA'])
genome = OrfFinder('DDADCBDDDBDAC')
assert sorted(genome.find('A', 'B')) == sorted(['ADCB', 'ADCBDDDB'])
genome = OrfFinder('ACBACCBBDAAAB')
assert sorted(genome.find('C', 'D')) == sorted(['CBACCBBD', 'CBBD', 'CCBBD'])
genome = OrfFinder('DCACBBBAACCDBB')
assert sorted(genome.find('C', 'D')) == sorted(['CACBBBAACCD', 'CBBBAACCD', 'CCD', 'CD'])
genome = OrfFinder('DCDCBBDDDDABCAB')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DABCA', 'DCBBDDDDA', 'DCBBDDDDABCA', 'DCDCBBDDDDA', 'DCDCBBDDDDABCA', 'DDA', 'DDABCA', 'DDDA', 'DDDABCA', 'DDDDA', 'DDDDABCA'])
genome = OrfFinder('BCCACCDAA')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'ACCDA', 'ACCDAA'])
genome = OrfFinder('BBBBDADDDCACBDCBBAAA')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BB', 'BB', 'BB', 'BBB', 'BBB', 'BBBB', 'BBBBDADDDCACB', 'BBBBDADDDCACBDCB', 'BBBBDADDDCACBDCBB', 'BBBDADDDCACB', 'BBBDADDDCACBDCB', 'BBBDADDDCACBDCBB', 'BBDADDDCACB', 'BBDADDDCACBDCB', 'BBDADDDCACBDCBB', 'BDADDDCACB', 'BDADDDCACBDCB', 'BDADDDCACBDCBB', 'BDCB', 'BDCBB'])
genome = OrfFinder('ADBCADCAADA')
assert sorted(genome.find('A', 'C')) == sorted(['ADBC', 'ADBCADC', 'ADC'])
genome = OrfFinder('BDCCBDDBDABABA')
assert sorted(genome.find('D', 'C')) == sorted(['DC', 'DCC'])
genome = OrfFinder('DCBADCADDBBDBCDCCBA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BADCA', 'BADCADDBBDBCDCCBA', 'BBDBCDCCBA', 'BCDCCBA', 'BDBCDCCBA'])
genome = OrfFinder('DACABABC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DACA', 'DACABA'])
genome = OrfFinder('BCCACAABCDBDDC')
assert sorted(genome.find('B', 'A')) == sorted(['BCCA', 'BCCACA', 'BCCACAA'])
genome = OrfFinder('AACCBC')
assert sorted(genome.find('C', 'C')) == sorted(['CBC', 'CC', 'CCBC'])
genome = OrfFinder('BBABBC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BBA'])
genome = OrfFinder('DDCCDDAACAABBDABDAC')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AABBDA', 'AABBDABDA', 'AACA', 'AACAA', 'AACAABBDA', 'AACAABBDABDA', 'ABBDA', 'ABBDABDA', 'ABDA', 'ACA', 'ACAA', 'ACAABBDA', 'ACAABBDABDA'])
genome = OrfFinder('BDCDDBACDBCADDBD')
assert sorted(genome.find('B', 'D')) == sorted(['BACD', 'BACDBCAD', 'BACDBCADD', 'BACDBCADDBD', 'BCAD', 'BCADD', 'BCADDBD', 'BD', 'BD', 'BDCD', 'BDCDD', 'BDCDDBACD', 'BDCDDBACDBCAD', 'BDCDDBACDBCADD', 'BDCDDBACDBCADDBD'])
genome = OrfFinder('BABACBACDCBDCB')
assert sorted(genome.find('B', 'D')) == sorted(['BABACBACD', 'BABACBACDCBD', 'BACBACD', 'BACBACDCBD', 'BACD', 'BACDCBD', 'BD'])
genome = OrfFinder('CCBACDDBBACABBDDCA')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBB', 'DBBACAB', 'DBBACABB', 'DDB', 'DDBB', 'DDBBACAB', 'DDBBACABB'])
genome = OrfFinder('DCDCBCCCCDCDABCCD')
assert sorted(genome.find('A', 'D')) == sorted(['ABCCD'])
genome = OrfFinder('CDCBB')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBB', 'CDCB', 'CDCBB'])
genome = OrfFinder('CCACBDCDCDCCBABBCAB')
assert sorted(genome.find('D', 'B')) == sorted(['DCCB', 'DCCBAB', 'DCCBABB', 'DCCBABBCAB', 'DCDCCB', 'DCDCCBAB', 'DCDCCBABB', 'DCDCCBABBCAB', 'DCDCDCCB', 'DCDCDCCBAB', 'DCDCDCCBABB', 'DCDCDCCBABBCAB'])
genome = OrfFinder('BCCAABBBACDBBCDC')
assert sorted(genome.find('C', 'B')) == sorted(['CAAB', 'CAABB', 'CAABBB', 'CAABBBACDB', 'CAABBBACDBB', 'CCAAB', 'CCAABB', 'CCAABBB', 'CCAABBBACDB', 'CCAABBBACDBB', 'CDB', 'CDBB'])
genome = OrfFinder('CBBDACBCDBCACC')
assert sorted(genome.find('A', 'A')) == sorted(['ACBCDBCA'])
genome = OrfFinder('DBBAACCCBCDCBADDDBDA')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DBB', 'DBBAACCCB', 'DBBAACCCBCDCB', 'DBBAACCCBCDCBADDDB', 'DCB', 'DCBADDDB', 'DDB', 'DDDB'])
genome = OrfFinder('BBBABCDCCCBAD')
assert sorted(genome.find('B', 'D')) == sorted(['BABCD', 'BABCDCCCBAD', 'BAD', 'BBABCD', 'BBABCDCCCBAD', 'BBBABCD', 'BBBABCDCCCBAD', 'BCD', 'BCDCCCBAD'])
genome = OrfFinder('BCBDAABDCCBDBCBBDB')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AABDCCB', 'AABDCCBDB', 'AABDCCBDBCB', 'AABDCCBDBCBB', 'AABDCCBDBCBBDB', 'AB', 'ABDCCB', 'ABDCCBDB', 'ABDCCBDBCB', 'ABDCCBDBCBB', 'ABDCCBDBCBBDB'])
genome = OrfFinder('BBADCBDCBAACDCAAACB')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BAA', 'BAACDCA', 'BAACDCAA', 'BAACDCAAA', 'BADCBDCBA', 'BADCBDCBAA', 'BADCBDCBAACDCA', 'BADCBDCBAACDCAA', 'BADCBDCBAACDCAAA', 'BBA', 'BBADCBDCBA', 'BBADCBDCBAA', 'BBADCBDCBAACDCA', 'BBADCBDCBAACDCAA', 'BBADCBDCBAACDCAAA', 'BDCBA', 'BDCBAA', 'BDCBAACDCA', 'BDCBAACDCAA', 'BDCBAACDCAAA'])
genome = OrfFinder('ABCCACBDCB')
assert sorted(genome.find('C', 'B')) == sorted(['CACB', 'CACBDCB', 'CB', 'CB', 'CBDCB', 'CCACB', 'CCACBDCB'])
genome = OrfFinder('BDDBCDDCCADCCABCDC')
assert sorted(genome.find('B', 'D')) == sorted(['BCD', 'BCD', 'BCDD', 'BCDDCCAD', 'BCDDCCADCCABCD', 'BD', 'BDD', 'BDDBCD', 'BDDBCDD', 'BDDBCDDCCAD', 'BDDBCDDCCADCCABCD'])
genome = OrfFinder('CCCCDDBCDDDDBBACDAD')
assert sorted(genome.find('A', 'C')) == sorted(['AC'])
genome = OrfFinder('CCADCDDCDDDCCDBBDDC')
assert sorted(genome.find('A', 'C')) == sorted(['ADC', 'ADCDDC', 'ADCDDCDDDC', 'ADCDDCDDDCC', 'ADCDDCDDDCCDBBDDC'])
genome = OrfFinder('DDDAADDADACABBACCD')
assert sorted(genome.find('A', 'C')) == sorted(['AADDADAC', 'AADDADACABBAC', 'AADDADACABBACC', 'ABBAC', 'ABBACC', 'AC', 'AC', 'ACABBAC', 'ACABBACC', 'ACC', 'ADAC', 'ADACABBAC', 'ADACABBACC', 'ADDADAC', 'ADDADACABBAC', 'ADDADACABBACC'])
genome = OrfFinder('ADAADDDCC')
assert sorted(genome.find('D', 'C')) == sorted(['DAADDDC', 'DAADDDCC', 'DC', 'DCC', 'DDC', 'DDCC', 'DDDC', 'DDDCC'])
genome = OrfFinder('CBCACDDDACDD')
assert sorted(genome.find('C', 'B')) == sorted(['CB'])
genome = OrfFinder('ACCBDADDBADDAAC')
assert sorted(genome.find('B', 'B')) == sorted(['BDADDB'])
genome = OrfFinder('DCBCCCABBAA')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CB', 'CBCCCAB', 'CBCCCABB', 'CCAB', 'CCABB', 'CCCAB', 'CCCABB'])
genome = OrfFinder('BCBDACACCDCCA')
assert sorted(genome.find('B', 'B')) == sorted(['BCB'])
genome = OrfFinder('DABCBA')
assert sorted(genome.find('C', 'A')) == sorted(['CBA'])
genome = OrfFinder('DDCBCBBCBDABA')
assert sorted(genome.find('C', 'C')) == sorted(['CBBC', 'CBC', 'CBCBBC'])
genome = OrfFinder('CDDDDAACCDB')
assert sorted(genome.find('A', 'B')) == sorted(['AACCDB', 'ACCDB'])
genome = OrfFinder('DAABCDCBCAC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DAA', 'DAABCDCBCA', 'DCBCA'])
genome = OrfFinder('ABCDBBADAABACBCDDD')
assert sorted(genome.find('A', 'C')) == sorted(['AABAC', 'AABACBC', 'ABAC', 'ABACBC', 'ABC', 'ABCDBBADAABAC', 'ABCDBBADAABACBC', 'AC', 'ACBC', 'ADAABAC', 'ADAABACBC'])
genome = OrfFinder('CDBDCAAACBDDDBADACBA')
assert sorted(genome.find('D', 'B')) == sorted(['DACB', 'DB', 'DB', 'DBADACB', 'DBDCAAACB', 'DBDCAAACBDDDB', 'DBDCAAACBDDDBADACB', 'DCAAACB', 'DCAAACBDDDB', 'DCAAACBDDDBADACB', 'DDB', 'DDBADACB', 'DDDB', 'DDDBADACB'])
genome = OrfFinder('ADACCABBC')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABB', 'ACCAB', 'ACCABB', 'ADACCAB', 'ADACCABB'])
genome = OrfFinder('DBCAABA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CAABA'])
genome = OrfFinder('BACABACAACDD')
assert sorted(genome.find('A', 'D')) == sorted(['AACD', 'AACDD', 'ABACAACD', 'ABACAACDD', 'ACAACD', 'ACAACDD', 'ACABACAACD', 'ACABACAACDD', 'ACD', 'ACDD'])
genome = OrfFinder('CBBCCBDDDABD')
assert sorted(genome.find('B', 'D')) == sorted(['BBCCBD', 'BBCCBDD', 'BBCCBDDD', 'BBCCBDDDABD', 'BCCBD', 'BCCBDD', 'BCCBDDD', 'BCCBDDDABD', 'BD', 'BD', 'BDD', 'BDDD', 'BDDDABD'])
genome = OrfFinder('ADBDDADA')
assert sorted(genome.find('A', 'B')) == sorted(['ADB'])
genome = OrfFinder('DACCBBDDACB')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BBDDACB', 'BDDACB'])
genome = OrfFinder('BADBABCCABC')
assert sorted(genome.find('A', 'A')) == sorted(['ABCCA', 'ADBA', 'ADBABCCA'])
genome = OrfFinder('BBDADABDDBBDDABADBD')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'AB', 'ABADB', 'ABDDB', 'ABDDBB', 'ABDDBBDDAB', 'ABDDBBDDABADB', 'ADAB', 'ADABDDB', 'ADABDDBB', 'ADABDDBBDDAB', 'ADABDDBBDDABADB', 'ADB'])
genome = OrfFinder('CDCCADDDBCAB')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CADDDB', 'CADDDBCAB', 'CCADDDB', 'CCADDDBCAB', 'CDCCADDDB', 'CDCCADDDBCAB'])
genome = OrfFinder('BCDDBCBACCA')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DBCB', 'DDB', 'DDBCB'])
genome = OrfFinder('CBDDDABDCDAB')
assert sorted(genome.find('B', 'C')) == sorted(['BDC', 'BDDDABDC'])
genome = OrfFinder('ABDADDBCBBBABCB')
assert sorted(genome.find('B', 'C')) == sorted(['BABC', 'BBABC', 'BBBABC', 'BC', 'BC', 'BCBBBABC', 'BDADDBC', 'BDADDBCBBBABC'])
genome = OrfFinder('DDDADCDBD')
assert sorted(genome.find('C', 'B')) == sorted(['CDB'])
genome = OrfFinder('CCAABCACCCBD')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AABCACCCB', 'AB', 'ABCACCCB', 'ACCCB'])
genome = OrfFinder('CAACDBADAAD')
assert sorted(genome.find('C', 'D')) == sorted(['CAACD', 'CAACDBAD', 'CAACDBADAAD', 'CD', 'CDBAD', 'CDBADAAD'])
genome = OrfFinder('BCBB')
assert sorted(genome.find('B', 'C')) == sorted(['BC'])
genome = OrfFinder('DBCACDDCDCCB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CACDDC', 'CACDDCDC', 'CACDDCDCC', 'CC', 'CDC', 'CDCC', 'CDDC', 'CDDCDC', 'CDDCDCC'])
genome = OrfFinder('DDDABBCAA')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA'])
genome = OrfFinder('BACDDBCA')
assert sorted(genome.find('B', 'D')) == sorted(['BACD', 'BACDD'])
genome = OrfFinder('DBCDCCDCCDAAACABC')
assert sorted(genome.find('D', 'C')) == sorted(['DAAAC', 'DAAACABC', 'DBC', 'DBCDC', 'DBCDCC', 'DBCDCCDC', 'DBCDCCDCC', 'DBCDCCDCCDAAAC', 'DBCDCCDCCDAAACABC', 'DC', 'DC', 'DCC', 'DCC', 'DCCDAAAC', 'DCCDAAACABC', 'DCCDC', 'DCCDCC', 'DCCDCCDAAAC', 'DCCDCCDAAACABC'])
genome = OrfFinder('DDAADDCBBBDCABD')
assert sorted(genome.find('C', 'C')) == sorted(['CBBBDC'])
genome = OrfFinder('BCCBDDACDDBDACBB')
assert sorted(genome.find('A', 'B')) == sorted(['ACB', 'ACBB', 'ACDDB', 'ACDDBDACB', 'ACDDBDACBB'])
genome = OrfFinder('CBDDDABDDBDDBDBCCBA')
assert sorted(genome.find('A', 'A')) == sorted(['ABDDBDDBDBCCBA'])
genome = OrfFinder('ACBADBCD')
assert sorted(genome.find('D', 'B')) == sorted(['DB'])
genome = OrfFinder('ABABDDADDCDBDBABAD')
assert sorted(genome.find('D', 'B')) == sorted(['DADDCDB', 'DADDCDBDB', 'DADDCDBDBAB', 'DB', 'DB', 'DBAB', 'DBDB', 'DBDBAB', 'DCDB', 'DCDBDB', 'DCDBDBAB', 'DDADDCDB', 'DDADDCDBDB', 'DDADDCDBDBAB', 'DDCDB', 'DDCDBDB', 'DDCDBDBAB'])
genome = OrfFinder('CABDAAAAAADCDADCD')
assert sorted(genome.find('C', 'C')) == sorted(['CABDAAAAAADC', 'CABDAAAAAADCDADC', 'CDADC'])
genome = OrfFinder('DDCDDDBCACBD')
assert sorted(genome.find('C', 'D')) == sorted(['CACBD', 'CBD', 'CD', 'CDD', 'CDDD', 'CDDDBCACBD'])
genome = OrfFinder('DCAACBBA')
assert sorted(genome.find('C', 'C')) == sorted(['CAAC'])
genome = OrfFinder('DCCCACDBBCA')
assert sorted(genome.find('A', 'A')) == sorted(['ACDBBCA'])
genome = OrfFinder('DADADAABCACBDDADDBDC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CACBDDA', 'CBDDA'])
genome = OrfFinder('AADADCCDBDACBBADABAD')
assert sorted(genome.find('C', 'C')) == sorted(['CC', 'CCDBDAC', 'CDBDAC'])
genome = OrfFinder('CBCDAAACADCABABBD')
assert sorted(genome.find('B', 'B')) == sorted(['BAB', 'BABB', 'BB', 'BCDAAACADCAB', 'BCDAAACADCABAB', 'BCDAAACADCABABB'])
genome = OrfFinder('ACDBDDDADC')
assert sorted(genome.find('A', 'D')) == sorted(['ACD', 'ACDBD', 'ACDBDD', 'ACDBDDD', 'ACDBDDDAD', 'AD'])
genome = OrfFinder('ABDABCAADAADDDBD')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'AA', 'AADA', 'AADAA', 'ABCA', 'ABCAA', 'ABCAADA', 'ABCAADAA', 'ABDA', 'ABDABCA', 'ABDABCAA', 'ABDABCAADA', 'ABDABCAADAA', 'ADA', 'ADAA'])
genome = OrfFinder('AADACB')
assert sorted(genome.find('A', 'C')) == sorted(['AADAC', 'AC', 'ADAC'])
genome = OrfFinder('CCCADDBDDDADDDADDBA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DADDBA', 'DADDDA', 'DADDDADDBA', 'DBA', 'DBDDDA', 'DBDDDADDDA', 'DBDDDADDDADDBA', 'DDA', 'DDA', 'DDADDBA', 'DDADDDA', 'DDADDDADDBA', 'DDBA', 'DDBDDDA', 'DDBDDDADDDA', 'DDBDDDADDDADDBA', 'DDDA', 'DDDA', 'DDDADDBA', 'DDDADDDA', 'DDDADDDADDBA'])
genome = OrfFinder('CBABCABCDBDCCDC')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABCDB', 'CB', 'CBAB', 'CBABCAB', 'CBABCABCDB', 'CDB'])
genome = OrfFinder('DDCBCABCCDCC')
assert sorted(genome.find('D', 'D')) == sorted(['DCBCABCCD', 'DD', 'DDCBCABCCD'])
genome = OrfFinder('AADDCBC')
assert sorted(genome.find('C', 'B')) == sorted(['CB'])
genome = OrfFinder('BCCDABBABCADBBBDB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CCDA', 'CCDABBA', 'CCDABBABCA', 'CDA', 'CDABBA', 'CDABBABCA'])
genome = OrfFinder('DDAACADBDDAAAACAAAD')
assert sorted(genome.find('B', 'C')) == sorted(['BDDAAAAC'])
genome = OrfFinder('BDABDADDBAADBBDBCAC')
assert sorted(genome.find('A', 'C')) == sorted(['AADBBDBC', 'AADBBDBCAC', 'ABDADDBAADBBDBC', 'ABDADDBAADBBDBCAC', 'AC', 'ADBBDBC', 'ADBBDBCAC', 'ADDBAADBBDBC', 'ADDBAADBBDBCAC'])
genome = OrfFinder('CBD')
assert sorted(genome.find('C', 'D')) == sorted(['CBD'])
genome = OrfFinder('DADAADDACACCDA')
assert sorted(genome.find('D', 'C')) == sorted(['DAADDAC', 'DAADDACAC', 'DAADDACACC', 'DAC', 'DACAC', 'DACACC', 'DADAADDAC', 'DADAADDACAC', 'DADAADDACACC', 'DDAC', 'DDACAC', 'DDACACC'])
genome = OrfFinder('DBACCADBCBDADCBBACB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CADBCBDA', 'CADBCBDADCBBA', 'CBBA', 'CBDA', 'CBDADCBBA', 'CCA', 'CCADBCBDA', 'CCADBCBDADCBBA'])
genome = OrfFinder('CBDCDDAABCD')
assert sorted(genome.find('B', 'B')) == sorted(['BDCDDAAB'])
genome = OrfFinder('DCCBADAADAAA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DAA', 'DAA', 'DAAA', 'DAADA', 'DAADAA', 'DAADAAA', 'DCCBA', 'DCCBADA', 'DCCBADAA', 'DCCBADAADA', 'DCCBADAADAA', 'DCCBADAADAAA'])
genome = OrfFinder('DDB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DDB'])
genome = OrfFinder('AACBAACABDBBACABB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CABDBBA', 'CABDBBACA', 'CBA', 'CBAA', 'CBAACA', 'CBAACABDBBA', 'CBAACABDBBACA'])
genome = OrfFinder('DBDACDAC')
assert sorted(genome.find('D', 'D')) == sorted(['DACD', 'DBD', 'DBDACD'])
genome = OrfFinder('DBAD')
assert sorted(genome.find('B', 'D')) == sorted(['BAD'])
genome = OrfFinder('ABCCBDADDAAC')
assert sorted(genome.find('A', 'A')) == sorted(['AA', 'ABCCBDA', 'ABCCBDADDA', 'ABCCBDADDAA', 'ADDA', 'ADDAA'])
genome = OrfFinder('BADADDDAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ADADDDAB', 'ADDDAB'])
genome = OrfFinder('DBDBACDBCBCCDBAD')
assert sorted(genome.find('D', 'A')) == sorted(['DBA', 'DBA', 'DBACDBCBCCDBA', 'DBCBCCDBA', 'DBDBA', 'DBDBACDBCBCCDBA'])
genome = OrfFinder('BCDA')
assert sorted(genome.find('C', 'A')) == sorted(['CDA'])
genome = OrfFinder('ABABDDBBDCCCBAADCB')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBAA', 'CCBA', 'CCBAA', 'CCCBA', 'CCCBAA'])
genome = OrfFinder('BBCCCACDCDDBADD')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BBCCCACDCDDB', 'BCCCACDCDDB'])
genome = OrfFinder('DCCAADDABBDDABDAAAC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BBDDAB', 'BDDAB'])
genome = OrfFinder('ABCCBCCCDC')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CCB'])
genome = OrfFinder('CACDDBDDBAACAD')
assert sorted(genome.find('D', 'A')) == sorted(['DBA', 'DBAA', 'DBAACA', 'DBDDBA', 'DBDDBAA', 'DBDDBAACA', 'DDBA', 'DDBAA', 'DDBAACA', 'DDBDDBA', 'DDBDDBAA', 'DDBDDBAACA'])
genome = OrfFinder('DCCCB')
assert sorted(genome.find('C', 'D')) == sorted([])
genome = OrfFinder('AABCCDADDBAAADAC')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DADDBAAADAC', 'DBAAADAC', 'DDBAAADAC'])
genome = OrfFinder('ADBAABCDDCCC')
assert sorted(genome.find('D', 'C')) == sorted(['DBAABC', 'DBAABCDDC', 'DBAABCDDCC', 'DBAABCDDCCC', 'DC', 'DCC', 'DCCC', 'DDC', 'DDCC', 'DDCCC'])
genome = OrfFinder('CADBD')
assert sorted(genome.find('B', 'D')) == sorted(['BD'])
genome = OrfFinder('AACDBDABCCCA')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DABCCCA', 'DBDA', 'DBDABCCCA'])
genome = OrfFinder('CBACCBDDADDBDBBACA')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADD', 'DADDBD', 'DBD', 'DD', 'DD', 'DDAD', 'DDADD', 'DDADDBD', 'DDBD'])
genome = OrfFinder('AAAADDBDCDADBCADCD')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DADBCA', 'DBCA', 'DBDCDA', 'DBDCDADBCA', 'DCDA', 'DCDADBCA', 'DDBDCDA', 'DDBDCDADBCA'])
genome = OrfFinder('DADBCBCABDCCAC')
assert sorted(genome.find('B', 'D')) == sorted(['BCABD', 'BCBCABD', 'BD'])
genome = OrfFinder('CDCCCBBAADCCAD')
assert sorted(genome.find('C', 'C')) == sorted(['CBBAADC', 'CBBAADCC', 'CC', 'CC', 'CC', 'CCBBAADC', 'CCBBAADCC', 'CCC', 'CCCBBAADC', 'CCCBBAADCC', 'CDC', 'CDCC', 'CDCCC', 'CDCCCBBAADC', 'CDCCCBBAADCC'])
genome = OrfFinder('CCAACDC')
assert sorted(genome.find('D', 'C')) == sorted(['DC'])
genome = OrfFinder('AAADDC')
assert sorted(genome.find('A', 'D')) == sorted(['AAAD', 'AAADD', 'AAD', 'AADD', 'AD', 'ADD'])
genome = OrfFinder('ABDDDCBADBDDCABDB')
assert sorted(genome.find('B', 'D')) == sorted(['BAD', 'BADBD', 'BADBDD', 'BADBDDCABD', 'BD', 'BD', 'BD', 'BDD', 'BDD', 'BDDCABD', 'BDDD', 'BDDDCBAD', 'BDDDCBADBD', 'BDDDCBADBDD', 'BDDDCBADBDDCABD'])
genome = OrfFinder('AABCBCD')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BC', 'BCBC'])
genome = OrfFinder('BCDCADDCCCABDACDB')
assert sorted(genome.find('B', 'B')) == sorted(['BCDCADDCCCAB', 'BCDCADDCCCABDACDB', 'BDACDB'])
genome = OrfFinder('ACBBADCCCBBBACACCB')
assert sorted(genome.find('C', 'D')) == sorted(['CBBAD'])
genome = OrfFinder('CCAACABBAAAAADBB')
assert sorted(genome.find('A', 'B')) == sorted(['AAAAADB', 'AAAAADBB', 'AAAADB', 'AAAADBB', 'AAADB', 'AAADBB', 'AACAB', 'AACABB', 'AACABBAAAAADB', 'AACABBAAAAADBB', 'AADB', 'AADBB', 'AB', 'ABB', 'ABBAAAAADB', 'ABBAAAAADBB', 'ACAB', 'ACABB', 'ACABBAAAAADB', 'ACABBAAAAADBB', 'ADB', 'ADBB'])
genome = OrfFinder('BDBDCABBB')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CABBB'])
genome = OrfFinder('BAAC')
assert sorted(genome.find('A', 'A')) == sorted(['AA'])
genome = OrfFinder('BDCDCAADBCBCD')
assert sorted(genome.find('C', 'D')) == sorted(['CAAD', 'CAADBCBCD', 'CBCD', 'CD', 'CD', 'CDCAAD', 'CDCAADBCBCD'])
genome = OrfFinder('DAABBC')
assert sorted(genome.find('B', 'B')) == sorted(['BB'])
genome = OrfFinder('ABABADCCBBDDDADDDDAC')
assert sorted(genome.find('B', 'B')) == sorted(['BAB', 'BABADCCB', 'BABADCCBB', 'BADCCB', 'BADCCBB', 'BB'])
genome = OrfFinder('CDC')
assert sorted(genome.find('C', 'C')) == sorted(['CDC'])
genome = OrfFinder('BDBCABCABCDC')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'AB', 'ABCAB'])
genome = OrfFinder('BADBBBABBCCAADABDD')
assert sorted(genome.find('C', 'C')) == sorted(['CC'])
genome = OrfFinder('DBBCCACDDACDD')
assert sorted(genome.find('B', 'A')) == sorted(['BBCCA', 'BBCCACDDA', 'BCCA', 'BCCACDDA'])
genome = OrfFinder('BBBBCAADCBCD')
assert sorted(genome.find('A', 'B')) == sorted(['AADCB', 'ADCB'])
genome = OrfFinder('ACCABDCABBDDAAAC')
assert sorted(genome.find('B', 'D')) == sorted(['BBD', 'BBDD', 'BD', 'BD', 'BDCABBD', 'BDCABBDD', 'BDD'])
genome = OrfFinder('DBBDBCDDACDBACCBACCA')
assert sorted(genome.find('B', 'D')) == sorted(['BBD', 'BBDBCD', 'BBDBCDD', 'BBDBCDDACD', 'BCD', 'BCDD', 'BCDDACD', 'BD', 'BDBCD', 'BDBCDD', 'BDBCDDACD'])
genome = OrfFinder('BDCADDDBDDBBBDCCDCAD')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CADDDBDDBBBDCCDCA', 'CCDCA', 'CDCA'])
genome = OrfFinder('ADCA')
assert sorted(genome.find('D', 'C')) == sorted(['DC'])
genome = OrfFinder('BBADCACCABADBBD')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABADB', 'ABADBB', 'ACCAB', 'ACCABADB', 'ACCABADBB', 'ADB', 'ADBB', 'ADCACCAB', 'ADCACCABADB', 'ADCACCABADBB'])
genome = OrfFinder('ACDABBABAC')
assert sorted(genome.find('D', 'C')) == sorted(['DABBABAC'])
genome = OrfFinder('DDDCBDADBCCBCADACDD')
assert sorted(genome.find('B', 'A')) == sorted(['BCA', 'BCADA', 'BCCBCA', 'BCCBCADA', 'BDA', 'BDADBCCBCA', 'BDADBCCBCADA'])
genome = OrfFinder('AABBDDCCABCDCBBC')
assert sorted(genome.find('D', 'D')) == sorted(['DCCABCD', 'DD', 'DDCCABCD'])
genome = OrfFinder('DBDDACDBADCDCD')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DACDBA', 'DBA', 'DBDDA', 'DBDDACDBA', 'DDA', 'DDACDBA'])
genome = OrfFinder('CADABBC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CADA'])
genome = OrfFinder('BCBDDCDACBDABAACACD')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CB', 'CBDAB', 'CBDDCDACB', 'CBDDCDACBDAB', 'CDACB', 'CDACBDAB'])
genome = OrfFinder('CADACBA')
assert sorted(genome.find('D', 'B')) == sorted(['DACB'])
genome = OrfFinder('BAAACDCBABADDDBABDD')
assert sorted(genome.find('B', 'D')) == sorted(['BAAACD', 'BAAACDCBABAD', 'BAAACDCBABADD', 'BAAACDCBABADDD', 'BAAACDCBABADDDBABD', 'BAAACDCBABADDDBABDD', 'BABAD', 'BABADD', 'BABADDD', 'BABADDDBABD', 'BABADDDBABDD', 'BABD', 'BABDD', 'BAD', 'BADD', 'BADDD', 'BADDDBABD', 'BADDDBABDD', 'BD', 'BDD'])
genome = OrfFinder('DCDDABDDBDC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DCDDA', 'DDA'])
genome = OrfFinder('CDADAABCADBAAAD')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AABCADB', 'AB', 'ABCADB', 'ADAAB', 'ADAABCADB', 'ADB'])
genome = OrfFinder('DBBADCBDADBBBDDBCCB')
assert sorted(genome.find('C', 'A')) == sorted(['CBDA'])
genome = OrfFinder('AABDABCCBDCDACA')
assert sorted(genome.find('B', 'D')) == sorted(['BCCBD', 'BCCBDCD', 'BD', 'BD', 'BDABCCBD', 'BDABCCBDCD', 'BDCD'])
genome = OrfFinder('DDCCBCCABABDDAACDDD')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABAB', 'CB', 'CBCCAB', 'CBCCABAB', 'CCAB', 'CCABAB', 'CCB', 'CCBCCAB', 'CCBCCABAB'])
genome = OrfFinder('BDBBCDCADBBDDDBB')
assert sorted(genome.find('A', 'D')) == sorted(['AD', 'ADBBD', 'ADBBDD', 'ADBBDDD'])
genome = OrfFinder('DDBCCDDABACABDAD')
assert sorted(genome.find('D', 'D')) == sorted(['DABACABD', 'DABACABDAD', 'DAD', 'DBCCD', 'DBCCDD', 'DBCCDDABACABD', 'DBCCDDABACABDAD', 'DD', 'DD', 'DDABACABD', 'DDABACABDAD', 'DDBCCD', 'DDBCCDD', 'DDBCCDDABACABD', 'DDBCCDDABACABDAD'])
genome = OrfFinder('DDADDCABBCBDBADAAC')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CABBCB', 'CABBCBDB', 'CB', 'CBDB'])
genome = OrfFinder('DCDAB')
assert sorted(genome.find('C', 'D')) == sorted(['CD'])
genome = OrfFinder('DBBBBCAACDDBBDDCB')
assert sorted(genome.find('D', 'D')) == sorted(['DBBBBCAACD', 'DBBBBCAACDD', 'DBBBBCAACDDBBD', 'DBBBBCAACDDBBDD', 'DBBD', 'DBBDD', 'DD', 'DD', 'DDBBD', 'DDBBDD'])
genome = OrfFinder('DDDACDAACD')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DAA', 'DACDA', 'DACDAA', 'DDA', 'DDACDA', 'DDACDAA', 'DDDA', 'DDDACDA', 'DDDACDAA'])
genome = OrfFinder('CBCBDBA')
assert sorted(genome.find('D', 'A')) == sorted(['DBA'])
genome = OrfFinder('ADCBACBDDACAADBDDBD')
assert sorted(genome.find('A', 'B')) == sorted(['AADB', 'AADBDDB', 'ACAADB', 'ACAADBDDB', 'ACB', 'ACBDDACAADB', 'ACBDDACAADBDDB', 'ADB', 'ADBDDB', 'ADCB', 'ADCBACB', 'ADCBACBDDACAADB', 'ADCBACBDDACAADBDDB'])
genome = OrfFinder('DDADBCBBBDDABAC')
assert sorted(genome.find('A', 'A')) == sorted(['ABA', 'ADBCBBBDDA', 'ADBCBBBDDABA'])
genome = OrfFinder('AAAABDDBABC')
assert sorted(genome.find('D', 'C')) == sorted(['DBABC', 'DDBABC'])
genome = OrfFinder('DABCBBABAADCD')
assert sorted(genome.find('C', 'A')) == sorted(['CBBA', 'CBBABA', 'CBBABAA'])
genome = OrfFinder('CABAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'AB', 'ABAB'])
genome = OrfFinder('ACBCABBABBDCAADCAA')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CABBAB', 'CABBABB', 'CB', 'CBCAB', 'CBCABB', 'CBCABBAB', 'CBCABBABB'])
genome = OrfFinder('CBAACACDAABBDDDB')
assert sorted(genome.find('D', 'B')) == sorted(['DAAB', 'DAABB', 'DAABBDDDB', 'DB', 'DDB', 'DDDB'])
genome = OrfFinder('AABBC')
assert sorted(genome.find('A', 'B')) == sorted(['AAB', 'AABB', 'AB', 'ABB'])
genome = OrfFinder('BDDBCACA')
assert sorted(genome.find('D', 'A')) == sorted(['DBCA', 'DBCACA', 'DDBCA', 'DDBCACA'])
genome = OrfFinder('DCACAB')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CA', 'CACA'])
genome = OrfFinder('BCBACC')
assert sorted(genome.find('C', 'A')) == sorted(['CBA'])
genome = OrfFinder('CBAACBDBACCDCCCBBCCB')
assert sorted(genome.find('D', 'C')) == sorted(['DBAC', 'DBACC', 'DBACCDC', 'DBACCDCC', 'DBACCDCCC', 'DBACCDCCCBBC', 'DBACCDCCCBBCC', 'DC', 'DCC', 'DCCC', 'DCCCBBC', 'DCCCBBCC'])
genome = OrfFinder('DDADADDBCBABDC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BCBA'])
genome = OrfFinder('BBCDACBCDBD')
assert sorted(genome.find('D', 'B')) == sorted(['DACB', 'DACBCDB', 'DB'])
genome = OrfFinder('BBACBCDABDCCB')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CB', 'CBCDAB', 'CBCDABDCCB', 'CCB', 'CDAB', 'CDABDCCB'])
genome = OrfFinder('DDDB')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DDB', 'DDDB'])
genome = OrfFinder('BCCBCCDACDDCDDADAABC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DA', 'DAA', 'DACDDCDDA', 'DACDDCDDADA', 'DACDDCDDADAA', 'DADA', 'DADAA', 'DCDDA', 'DCDDADA', 'DCDDADAA', 'DDA', 'DDADA', 'DDADAA', 'DDCDDA', 'DDCDDADA', 'DDCDDADAA'])
genome = OrfFinder('BABCBDADBAADABBBAB')
assert sorted(genome.find('A', 'B')) == sorted(['AADAB', 'AADABB', 'AADABBB', 'AADABBBAB', 'AB', 'AB', 'AB', 'ABB', 'ABBB', 'ABBBAB', 'ABCB', 'ABCBDADB', 'ABCBDADBAADAB', 'ABCBDADBAADABB', 'ABCBDADBAADABBB', 'ABCBDADBAADABBBAB', 'ADAB', 'ADABB', 'ADABBB', 'ADABBBAB', 'ADB', 'ADBAADAB', 'ADBAADABB', 'ADBAADABBB', 'ADBAADABBBAB'])
genome = OrfFinder('AABDDA')
assert sorted(genome.find('B', 'A')) == sorted(['BDDA'])
genome = OrfFinder('DDDCBCCDBAACADAACA')
assert sorted(genome.find('B', 'D')) == sorted(['BAACAD', 'BCCD', 'BCCDBAACAD'])
genome = OrfFinder('CDCCCBBABCBDDADCDC')
assert sorted(genome.find('C', 'C')) == sorted(['CBBABC', 'CBBABCBDDADC', 'CBBABCBDDADCDC', 'CBDDADC', 'CBDDADCDC', 'CC', 'CC', 'CCBBABC', 'CCBBABCBDDADC', 'CCBBABCBDDADCDC', 'CCC', 'CCCBBABC', 'CCCBBABCBDDADC', 'CCCBBABCBDDADCDC', 'CDC', 'CDC', 'CDCC', 'CDCCC', 'CDCCCBBABC', 'CDCCCBBABCBDDADC', 'CDCCCBBABCBDDADCDC'])
genome = OrfFinder('DACBDBCBABADC')
assert sorted(genome.find('A', 'A')) == sorted(['ABA', 'ACBDBCBA', 'ACBDBCBABA'])
genome = OrfFinder('DAADBBCBDBADCAACDCC')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBDB'])
genome = OrfFinder('CDBACCDCC')
assert sorted(genome.find('D', 'D')) == sorted(['DBACCD'])
genome = OrfFinder('CCBDDBCADDCADBD')
assert sorted(genome.find('A', 'A')) == sorted(['ADDCA'])
genome = OrfFinder('DDCDBACBBDABCBBBAABB')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BA', 'BAA', 'BACBBDA', 'BACBBDABCBBBA', 'BACBBDABCBBBAA', 'BBA', 'BBAA', 'BBBA', 'BBBAA', 'BBDA', 'BBDABCBBBA', 'BBDABCBBBAA', 'BCBBBA', 'BCBBBAA', 'BDA', 'BDABCBBBA', 'BDABCBBBAA'])
genome = OrfFinder('ADDBADACADCADAACA')
assert sorted(genome.find('D', 'D')) == sorted(['DACAD', 'DACADCAD', 'DBAD', 'DBADACAD', 'DBADACADCAD', 'DCAD', 'DD', 'DDBAD', 'DDBADACAD', 'DDBADACADCAD'])
genome = OrfFinder('CCDCADBBDCCAADACCA')
assert sorted(genome.find('D', 'C')) == sorted(['DAC', 'DACC', 'DBBDC', 'DBBDCC', 'DBBDCCAADAC', 'DBBDCCAADACC', 'DC', 'DC', 'DCADBBDC', 'DCADBBDCC', 'DCADBBDCCAADAC', 'DCADBBDCCAADACC', 'DCC', 'DCCAADAC', 'DCCAADACC'])
genome = OrfFinder('ACAACACABBCAAAAAACBA')
assert sorted(genome.find('C', 'B')) == sorted(['CAAAAAACB', 'CAACACAB', 'CAACACABB', 'CAACACABBCAAAAAACB', 'CAB', 'CABB', 'CABBCAAAAAACB', 'CACAB', 'CACABB', 'CACABBCAAAAAACB', 'CB'])
genome = OrfFinder('CCCDCDACCBDADBCBB')
assert sorted(genome.find('D', 'D')) == sorted(['DACCBD', 'DACCBDAD', 'DAD', 'DCD', 'DCDACCBD', 'DCDACCBDAD'])
genome = OrfFinder('BBCBCDBAACBBAADC')
assert sorted(genome.find('C', 'C')) == sorted(['CBBAADC', 'CBC', 'CBCDBAAC', 'CBCDBAACBBAADC', 'CDBAAC', 'CDBAACBBAADC'])
genome = OrfFinder('BACADDCDD')
assert sorted(genome.find('C', 'C')) == sorted(['CADDC'])
genome = OrfFinder('DDCBDDABACDACBCCA')
assert sorted(genome.find('C', 'D')) == sorted(['CBD', 'CBDD', 'CBDDABACD', 'CD'])
genome = OrfFinder('BBDACBADCCCBDADBC')
assert sorted(genome.find('C', 'A')) == sorted(['CBA', 'CBADCCCBDA', 'CBDA', 'CCBDA', 'CCCBDA'])
genome = OrfFinder('ABCCAC')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CCA'])
genome = OrfFinder('DBBAACCB')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CCB'])
genome = OrfFinder('BACBCCCCDBCBDCCDCDBB')
assert sorted(genome.find('B', 'D')) == sorted(['BACBCCCCD', 'BACBCCCCDBCBD', 'BACBCCCCDBCBDCCD', 'BACBCCCCDBCBDCCDCD', 'BCBD', 'BCBDCCD', 'BCBDCCDCD', 'BCCCCD', 'BCCCCDBCBD', 'BCCCCDBCBDCCD', 'BCCCCDBCBDCCDCD', 'BD', 'BDCCD', 'BDCCDCD'])
genome = OrfFinder('ACBCADADAADDBDCD')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADAD', 'CADADAAD', 'CADADAADD', 'CADADAADDBD', 'CADADAADDBDCD', 'CBCAD', 'CBCADAD', 'CBCADADAAD', 'CBCADADAADD', 'CBCADADAADDBD', 'CBCADADAADDBDCD', 'CD'])
genome = OrfFinder('CBCDDDCAADBCADDCBCAC')
assert sorted(genome.find('B', 'A')) == sorted(['BCA', 'BCA', 'BCADDCBCA', 'BCDDDCA', 'BCDDDCAA', 'BCDDDCAADBCA', 'BCDDDCAADBCADDCBCA'])
genome = OrfFinder('ADBACCCDACCA')
assert sorted(genome.find('C', 'D')) == sorted(['CCCD', 'CCD', 'CD'])
genome = OrfFinder('BBDACCBBAB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ACCB', 'ACCBB', 'ACCBBAB'])
genome = OrfFinder('BBDCDADCDABBBAADD')
assert sorted(genome.find('A', 'C')) == sorted(['ADC'])
genome = OrfFinder('BBCCBDBBCDC')
assert sorted(genome.find('D', 'D')) == sorted(['DBBCD'])
genome = OrfFinder('DDCDBCBC')
assert sorted(genome.find('C', 'D')) == sorted(['CD'])
genome = OrfFinder('ACBBCBCDACBABABDCCDB')
assert sorted(genome.find('B', 'D')) == sorted(['BABABD', 'BABABDCCD', 'BABD', 'BABDCCD', 'BBCBCD', 'BBCBCDACBABABD', 'BBCBCDACBABABDCCD', 'BCBCD', 'BCBCDACBABABD', 'BCBCDACBABABDCCD', 'BCD', 'BCDACBABABD', 'BCDACBABABDCCD', 'BD', 'BDCCD'])
genome = OrfFinder('DACABAABACBC')
assert sorted(genome.find('B', 'C')) == sorted(['BAABAC', 'BAABACBC', 'BAC', 'BACBC', 'BC'])
genome = OrfFinder('BCBADCABDCDCCCDC')
assert sorted(genome.find('A', 'A')) == sorted(['ADCA'])
genome = OrfFinder('DCADCAC')
assert sorted(genome.find('D', 'C')) == sorted(['DC', 'DC', 'DCAC', 'DCADC', 'DCADCAC'])
genome = OrfFinder('CDADADBDDD')
assert sorted(genome.find('A', 'B')) == sorted(['ADADB', 'ADB'])
genome = OrfFinder('DDCBCADDADACCBB')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DADA', 'DCBCA', 'DCBCADDA', 'DCBCADDADA', 'DDA', 'DDADA', 'DDCBCA', 'DDCBCADDA', 'DDCBCADDADA'])
genome = OrfFinder('CABDBCCDDBA')
assert sorted(genome.find('A', 'A')) == sorted(['ABDBCCDDBA'])
genome = OrfFinder('DCAAADBDB')
assert sorted(genome.find('A', 'B')) == sorted(['AAADB', 'AAADBDB', 'AADB', 'AADBDB', 'ADB', 'ADBDB'])
genome = OrfFinder('ABBAACDABDBABDCB')
assert sorted(genome.find('A', 'B')) == sorted(['AACDAB', 'AACDABDB', 'AACDABDBAB', 'AACDABDBABDCB', 'AB', 'AB', 'AB', 'ABB', 'ABBAACDAB', 'ABBAACDABDB', 'ABBAACDABDBAB', 'ABBAACDABDBABDCB', 'ABDB', 'ABDBAB', 'ABDBABDCB', 'ABDCB', 'ACDAB', 'ACDABDB', 'ACDABDBAB', 'ACDABDBABDCB'])
genome = OrfFinder('BBAADACBBBDA')
assert sorted(genome.find('B', 'B')) == sorted(['BAADACB', 'BAADACBB', 'BAADACBBB', 'BB', 'BB', 'BB', 'BBAADACB', 'BBAADACBB', 'BBAADACBBB', 'BBB'])
genome = OrfFinder('CABBDBADCB')
assert sorted(genome.find('C', 'B')) == sorted(['CAB', 'CABB', 'CABBDB', 'CABBDBADCB', 'CB'])
genome = OrfFinder('DCDACDA')
assert sorted(genome.find('D', 'D')) == sorted(['DACD', 'DCD', 'DCDACD'])
genome = OrfFinder('ACBCBA')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BCBA'])
genome = OrfFinder('DACDBDDBABADCDCBADBA')
assert sorted(genome.find('D', 'D')) == sorted(['DACD', 'DACDBD', 'DACDBDD', 'DACDBDDBABAD', 'DACDBDDBABADCD', 'DACDBDDBABADCDCBAD', 'DBABAD', 'DBABADCD', 'DBABADCDCBAD', 'DBD', 'DBDD', 'DBDDBABAD', 'DBDDBABADCD', 'DBDDBABADCDCBAD', 'DCBAD', 'DCD', 'DCDCBAD', 'DD', 'DDBABAD', 'DDBABADCD', 'DDBABADCDCBAD'])
genome = OrfFinder('CDCADD')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADD', 'CD', 'CDCAD', 'CDCADD'])
genome = OrfFinder('DABADBBCADCDDD')
assert sorted(genome.find('B', 'D')) == sorted(['BAD', 'BADBBCAD', 'BADBBCADCD', 'BADBBCADCDD', 'BADBBCADCDDD', 'BBCAD', 'BBCADCD', 'BBCADCDD', 'BBCADCDDD', 'BCAD', 'BCADCD', 'BCADCDD', 'BCADCDDD'])
genome = OrfFinder('ACDCD')
assert sorted(genome.find('C', 'C')) == sorted(['CDC'])
genome = OrfFinder('CBABCDAADDBBC')
assert sorted(genome.find('B', 'B')) == sorted(['BAB', 'BABCDAADDB', 'BABCDAADDBB', 'BB', 'BCDAADDB', 'BCDAADDBB'])
genome = OrfFinder('AAACCBCDCDBDCDA')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BCDC', 'BCDCDBDC', 'BDC'])
genome = OrfFinder('ADBBBCBDCBCDDDBACCB')
assert sorted(genome.find('D', 'C')) == sorted(['DBAC', 'DBACC', 'DBBBC', 'DBBBCBDC', 'DBBBCBDCBC', 'DBBBCBDCBCDDDBAC', 'DBBBCBDCBCDDDBACC', 'DC', 'DCBC', 'DCBCDDDBAC', 'DCBCDDDBACC', 'DDBAC', 'DDBACC', 'DDDBAC', 'DDDBACC'])
genome = OrfFinder('CBCABDCACBCABCCAD')
assert sorted(genome.find('A', 'C')) == sorted(['ABC', 'ABCC', 'ABDC', 'ABDCAC', 'ABDCACBC', 'ABDCACBCABC', 'ABDCACBCABCC', 'AC', 'ACBC', 'ACBCABC', 'ACBCABCC'])
genome = OrfFinder('DCACBCABDABCABA')
assert sorted(genome.find('A', 'C')) == sorted(['ABC', 'ABDABC', 'AC', 'ACBC', 'ACBCABDABC'])
genome = OrfFinder('ACACDDDCDBDDCBB')
assert sorted(genome.find('B', 'C')) == sorted(['BDDC'])
genome = OrfFinder('ABCABADBBCBABCAAD')
assert sorted(genome.find('A', 'C')) == sorted(['ABADBBC', 'ABADBBCBABC', 'ABC', 'ABC', 'ABCABADBBC', 'ABCABADBBCBABC', 'ADBBC', 'ADBBCBABC'])
genome = OrfFinder('BABADDCDCADCDBCCACA')
assert sorted(genome.find('A', 'A')) == sorted(['ABA', 'ABADDCDCA', 'ABADDCDCADCDBCCA', 'ABADDCDCADCDBCCACA', 'ACA', 'ADCDBCCA', 'ADCDBCCACA', 'ADDCDCA', 'ADDCDCADCDBCCA', 'ADDCDCADCDBCCACA'])
genome = OrfFinder('CCBCCABCDACCCBB')
assert sorted(genome.find('A', 'D')) == sorted(['ABCD'])
genome = OrfFinder('DBDCAACCBDBACABBDAC')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DBACAB', 'DBACABB', 'DBDCAACCB', 'DBDCAACCBDB', 'DBDCAACCBDBACAB', 'DBDCAACCBDBACABB', 'DCAACCB', 'DCAACCBDB', 'DCAACCBDBACAB', 'DCAACCBDBACABB'])
genome = OrfFinder('BDAABCBBBB')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CBB', 'CBBB', 'CBBBB'])
genome = OrfFinder('BBCBADDBDBCCBBAADBC')
assert sorted(genome.find('D', 'A')) == sorted(['DBCCBBA', 'DBCCBBAA', 'DBDBCCBBA', 'DBDBCCBBAA', 'DDBDBCCBBA', 'DDBDBCCBBAA'])
genome = OrfFinder('BDBCCBBCDDABCCAA')
assert sorted(genome.find('B', 'A')) == sorted(['BBCDDA', 'BBCDDABCCA', 'BBCDDABCCAA', 'BCCA', 'BCCAA', 'BCCBBCDDA', 'BCCBBCDDABCCA', 'BCCBBCDDABCCAA', 'BCDDA', 'BCDDABCCA', 'BCDDABCCAA', 'BDBCCBBCDDA', 'BDBCCBBCDDABCCA', 'BDBCCBBCDDABCCAA'])
genome = OrfFinder('BDBDABACBDCBADACCC')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DA', 'DABA', 'DABACBDCBA', 'DABACBDCBADA', 'DBDA', 'DBDABA', 'DBDABACBDCBA', 'DBDABACBDCBADA', 'DCBA', 'DCBADA'])
genome = OrfFinder('CACCCDCBACBBACBCBBD')
assert sorted(genome.find('A', 'B')) == sorted(['ACB', 'ACB', 'ACBB', 'ACBBACB', 'ACBBACBCB', 'ACBBACBCBB', 'ACBCB', 'ACBCBB', 'ACCCDCB', 'ACCCDCBACB', 'ACCCDCBACBB', 'ACCCDCBACBBACB', 'ACCCDCBACBBACBCB', 'ACCCDCBACBBACBCBB'])
genome = OrfFinder('ADCAAACADDBDBCABCAC')
assert sorted(genome.find('C', 'D')) == sorted(['CAAACAD', 'CAAACADD', 'CAAACADDBD', 'CAD', 'CADD', 'CADDBD'])
genome = OrfFinder('BCAABCDADAD')
assert sorted(genome.find('C', 'A')) == sorted(['CA', 'CAA', 'CAABCDA', 'CAABCDADA', 'CDA', 'CDADA'])
genome = OrfFinder('BDBCCADCDA')
assert sorted(genome.find('C', 'C')) == sorted(['CADC', 'CC', 'CCADC'])
genome = OrfFinder('ABADABDDB')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DABDDB', 'DB', 'DDB'])
genome = OrfFinder('BABCAADCDBCAADDB')
assert sorted(genome.find('A', 'C')) == sorted(['AADC', 'AADCDBC', 'ABC', 'ABCAADC', 'ABCAADCDBC', 'ADC', 'ADCDBC'])
genome = OrfFinder('ABACCADDDDDBC')
assert sorted(genome.find('B', 'B')) == sorted(['BACCADDDDDB'])
genome = OrfFinder('ACAABADDDDDBAAC')
assert sorted(genome.find('A', 'C')) == sorted(['AABADDDDDBAAC', 'AAC', 'ABADDDDDBAAC', 'AC', 'AC', 'ACAABADDDDDBAAC', 'ADDDDDBAAC'])
genome = OrfFinder('CDCDCCBCADBBCDBDABB')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADBBCD', 'CADBBCDBD', 'CBCAD', 'CBCADBBCD', 'CBCADBBCDBD', 'CCBCAD', 'CCBCADBBCD', 'CCBCADBBCDBD', 'CD', 'CD', 'CD', 'CDBD', 'CDCCBCAD', 'CDCCBCADBBCD', 'CDCCBCADBBCDBD', 'CDCD', 'CDCDCCBCAD', 'CDCDCCBCADBBCD', 'CDCDCCBCADBBCDBD'])
genome = OrfFinder('DDBCDDBCACBDBB')
assert sorted(genome.find('D', 'A')) == sorted(['DBCA', 'DBCDDBCA', 'DDBCA', 'DDBCDDBCA'])
genome = OrfFinder('ADCBDCCBADCC')
assert sorted(genome.find('B', 'A')) == sorted(['BA', 'BDCCBA'])
genome = OrfFinder('DACCDBDBDBCCDACDD')
assert sorted(genome.find('B', 'D')) == sorted(['BCCD', 'BCCDACD', 'BCCDACDD', 'BD', 'BD', 'BDBCCD', 'BDBCCDACD', 'BDBCCDACDD', 'BDBD', 'BDBDBCCD', 'BDBDBCCDACD', 'BDBDBCCDACDD'])
genome = OrfFinder('CBACACCBADC')
assert sorted(genome.find('B', 'B')) == sorted(['BACACCB'])
genome = OrfFinder('BAADACBCBB')
assert sorted(genome.find('A', 'D')) == sorted(['AAD', 'AD'])
genome = OrfFinder('DBCDBBCDCACACCCCDBBD')
assert sorted(genome.find('B', 'D')) == sorted(['BBCD', 'BBCDCACACCCCD', 'BBCDCACACCCCDBBD', 'BBD', 'BCD', 'BCD', 'BCDBBCD', 'BCDBBCDCACACCCCD', 'BCDBBCDCACACCCCDBBD', 'BCDCACACCCCD', 'BCDCACACCCCDBBD', 'BD'])
genome = OrfFinder('ACBCADABBBD')
assert sorted(genome.find('D', 'D')) == sorted(['DABBBD'])
genome = OrfFinder('ACBBDDDBCBDCDA')
assert sorted(genome.find('C', 'B')) == sorted(['CB', 'CB', 'CBB', 'CBBDDDB', 'CBBDDDBCB'])
genome = OrfFinder('CACCDBDCCAD')
assert sorted(genome.find('B', 'A')) == sorted(['BDCCA'])
genome = OrfFinder('DBABBADADCBBDDDD')
assert sorted(genome.find('A', 'A')) == sorted(['ABBA', 'ABBADA', 'ADA'])
genome = OrfFinder('CDCABDBDCBCACACBA')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABDB', 'ABDBDCB', 'ABDBDCBCACACB', 'ACACB', 'ACB'])
genome = OrfFinder('CBCDAAAAACBD')
assert sorted(genome.find('D', 'D')) == sorted(['DAAAAACBD'])
genome = OrfFinder('ABBDDBDDDBDCACDADCCC')
assert sorted(genome.find('D', 'B')) == sorted(['DB', 'DB', 'DBDDDB', 'DDB', 'DDB', 'DDBDDDB', 'DDDB'])
genome = OrfFinder('CADACDCBBBCD')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CADACD', 'CADACDCBBBCD', 'CBBBCD', 'CD', 'CD', 'CDCBBBCD'])
genome = OrfFinder('CABBBDCBACADDABCBAB')
assert sorted(genome.find('D', 'A')) == sorted(['DA', 'DABCBA', 'DCBA', 'DCBACA', 'DCBACADDA', 'DCBACADDABCBA', 'DDA', 'DDABCBA'])
genome = OrfFinder('CACCADDCDACCDDCBACB')
assert sorted(genome.find('B', 'A')) == sorted(['BA'])
genome = OrfFinder('ACBADBCCBBDBCADA')
assert sorted(genome.find('A', 'D')) == sorted(['ACBAD', 'ACBADBCCBBD', 'ACBADBCCBBDBCAD', 'AD', 'AD', 'ADBCCBBD', 'ADBCCBBDBCAD'])
genome = OrfFinder('DBCBBDCABDDCCCADAACC')
assert sorted(genome.find('B', 'B')) == sorted(['BB', 'BBDCAB', 'BCB', 'BCBB', 'BCBBDCAB', 'BDCAB'])
genome = OrfFinder('DBCACBDDDADBBA')
assert sorted(genome.find('B', 'D')) == sorted(['BCACBD', 'BCACBDD', 'BCACBDDD', 'BCACBDDDAD', 'BD', 'BDD', 'BDDD', 'BDDDAD'])
genome = OrfFinder('BABCDBDACCDDAABD')
assert sorted(genome.find('C', 'A')) == sorted(['CCDDA', 'CCDDAA', 'CDBDA', 'CDBDACCDDA', 'CDBDACCDDAA', 'CDDA', 'CDDAA'])
genome = OrfFinder('ABADDADDCABCBD')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DADD', 'DADDCABCBD', 'DCABCBD', 'DD', 'DD', 'DDAD', 'DDADD', 'DDADDCABCBD', 'DDCABCBD'])
genome = OrfFinder('DCBAADAADBBCA')
assert sorted(genome.find('A', 'C')) == sorted(['AADAADBBC', 'AADBBC', 'ADAADBBC', 'ADBBC'])
genome = OrfFinder('CBBDBDBBCDB')
assert sorted(genome.find('B', 'C')) == sorted(['BBC', 'BBDBDBBC', 'BC', 'BDBBC', 'BDBDBBC'])
genome = OrfFinder('CCBBCAABCCCBDCAB')
assert sorted(genome.find('D', 'A')) == sorted(['DCA'])
genome = OrfFinder('BDDDCDAAABBCCDAAD')
assert sorted(genome.find('A', 'C')) == sorted(['AAABBC', 'AAABBCC', 'AABBC', 'AABBCC', 'ABBC', 'ABBCC'])
genome = OrfFinder('BCDCBACDCDCBD')
assert sorted(genome.find('C', 'D')) == sorted(['CBACD', 'CBACDCD', 'CBACDCDCBD', 'CBD', 'CD', 'CD', 'CD', 'CDCBACD', 'CDCBACDCD', 'CDCBACDCDCBD', 'CDCBD', 'CDCD', 'CDCDCBD'])
genome = OrfFinder('DCCDAABDDDADDBBAC')
assert sorted(genome.find('C', 'D')) == sorted(['CCD', 'CCDAABD', 'CCDAABDD', 'CCDAABDDD', 'CCDAABDDDAD', 'CCDAABDDDADD', 'CD', 'CDAABD', 'CDAABDD', 'CDAABDDD', 'CDAABDDDAD', 'CDAABDDDADD'])
genome = OrfFinder('DBDABC')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BDABC'])
genome = OrfFinder('BCBABCDADDDADBDAACC')
assert sorted(genome.find('D', 'D')) == sorted(['DAD', 'DAD', 'DADBD', 'DADD', 'DADDD', 'DADDDAD', 'DADDDADBD', 'DBD', 'DD', 'DD', 'DDAD', 'DDADBD', 'DDD', 'DDDAD', 'DDDADBD'])
genome = OrfFinder('DBADDAADBBBBACAD')
assert sorted(genome.find('B', 'B')) == sorted(['BADDAADB', 'BADDAADBB', 'BADDAADBBB', 'BADDAADBBBB', 'BB', 'BB', 'BB', 'BBB', 'BBB', 'BBBB'])
genome = OrfFinder('BBACCDCBAAD')
assert sorted(genome.find('D', 'B')) == sorted(['DCB'])
genome = OrfFinder('DCBACBADDDBCBBCBCDBC')
assert sorted(genome.find('D', 'C')) == sorted(['DBC', 'DBC', 'DBCBBC', 'DBCBBCBC', 'DBCBBCBCDBC', 'DC', 'DCBAC', 'DCBACBADDDBC', 'DCBACBADDDBCBBC', 'DCBACBADDDBCBBCBC', 'DCBACBADDDBCBBCBCDBC', 'DDBC', 'DDBCBBC', 'DDBCBBCBC', 'DDBCBBCBCDBC', 'DDDBC', 'DDDBCBBC', 'DDDBCBBCBC', 'DDDBCBBCBCDBC'])
genome = OrfFinder('CDCAABC')
assert sorted(genome.find('C', 'D')) == sorted(['CD'])
genome = OrfFinder('CDCDCBDAB')
assert sorted(genome.find('D', 'C')) == sorted(['DC', 'DC', 'DCDC'])
genome = OrfFinder('DBDCDCCCDABBD')
assert sorted(genome.find('D', 'D')) == sorted(['DABBD', 'DBD', 'DBDCD', 'DBDCDCCCD', 'DBDCDCCCDABBD', 'DCCCD', 'DCCCDABBD', 'DCD', 'DCDCCCD', 'DCDCCCDABBD'])
genome = OrfFinder('CCAAAACBA')
assert sorted(genome.find('A', 'B')) == sorted(['AAAACB', 'AAACB', 'AACB', 'ACB'])
genome = OrfFinder('BACBACBABA')
assert sorted(genome.find('A', 'A')) == sorted(['ABA', 'ACBA', 'ACBA', 'ACBABA', 'ACBACBA', 'ACBACBABA'])
genome = OrfFinder('BBDABCCDDBBDB')
assert sorted(genome.find('B', 'D')) == sorted(['BBD', 'BBD', 'BBDABCCD', 'BBDABCCDD', 'BBDABCCDDBBD', 'BCCD', 'BCCDD', 'BCCDDBBD', 'BD', 'BD', 'BDABCCD', 'BDABCCDD', 'BDABCCDDBBD'])
genome = OrfFinder('DBABBDDBCCBAAABAB')
assert sorted(genome.find('D', 'A')) == sorted(['DBA', 'DBABBDDBCCBA', 'DBABBDDBCCBAA', 'DBABBDDBCCBAAA', 'DBABBDDBCCBAAABA', 'DBCCBA', 'DBCCBAA', 'DBCCBAAA', 'DBCCBAAABA', 'DDBCCBA', 'DDBCCBAA', 'DDBCCBAAA', 'DDBCCBAAABA'])
genome = OrfFinder('BADAACDBBDBAAD')
assert sorted(genome.find('A', 'C')) == sorted(['AAC', 'AC', 'ADAAC'])
genome = OrfFinder('BDBBCCBBBBBBABBBCDA')
assert sorted(genome.find('B', 'C')) == sorted(['BABBBC', 'BBABBBC', 'BBBABBBC', 'BBBBABBBC', 'BBBBBABBBC', 'BBBBBBABBBC', 'BBBC', 'BBC', 'BBC', 'BBCC', 'BBCCBBBBBBABBBC', 'BC', 'BC', 'BCC', 'BCCBBBBBBABBBC', 'BDBBC', 'BDBBCC', 'BDBBCCBBBBBBABBBC'])
genome = OrfFinder('ABBCAAADCCBADDDBDAC')
assert sorted(genome.find('C', 'B')) == sorted(['CAAADCCB', 'CAAADCCBADDDB', 'CB', 'CBADDDB', 'CCB', 'CCBADDDB'])
genome = OrfFinder('ACCBBCCBAACCCBCA')
assert sorted(genome.find('A', 'B')) == sorted(['AACCCB', 'ACCB', 'ACCBB', 'ACCBBCCB', 'ACCBBCCBAACCCB', 'ACCCB'])
genome = OrfFinder('BDBBBACDBDBADCB')
assert sorted(genome.find('A', 'B')) == sorted(['ACDB', 'ACDBDB', 'ACDBDBADCB', 'ADCB'])
genome = OrfFinder('CCDCBCBDB')
assert sorted(genome.find('C', 'D')) == sorted(['CBCBD', 'CBD', 'CCD', 'CCDCBCBD', 'CD', 'CDCBCBD'])
genome = OrfFinder('ABACDB')
assert sorted(genome.find('A', 'B')) == sorted(['AB', 'ABACDB', 'ACDB'])
genome = OrfFinder('ADBAADABCBDAADDDBBCC')
assert sorted(genome.find('D', 'B')) == sorted(['DAADDDB', 'DAADDDBB', 'DAB', 'DABCB', 'DABCBDAADDDB', 'DABCBDAADDDBB', 'DB', 'DB', 'DBAADAB', 'DBAADABCB', 'DBAADABCBDAADDDB', 'DBAADABCBDAADDDBB', 'DBB', 'DDB', 'DDBB', 'DDDB', 'DDDBB'])
genome = OrfFinder('BBBCAADDACCCCBBBCB')
assert sorted(genome.find('C', 'C')) == sorted(['CAADDAC', 'CAADDACC', 'CAADDACCC', 'CAADDACCCC', 'CAADDACCCCBBBC', 'CBBBC', 'CC', 'CC', 'CC', 'CCBBBC', 'CCC', 'CCC', 'CCCBBBC', 'CCCC', 'CCCCBBBC'])
genome = OrfFinder('DBCDCCADBC')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BC', 'BCDC', 'BCDCC', 'BCDCCADBC'])
genome = OrfFinder('CDDACBAABCCBAA')
assert sorted(genome.find('B', 'B')) == sorted(['BAAB', 'BAABCCB', 'BCCB'])
genome = OrfFinder('ACCBBBCADBDC')
assert sorted(genome.find('D', 'C')) == sorted(['DBDC', 'DC'])
genome = OrfFinder('DDBCBBCADB')
assert sorted(genome.find('C', 'D')) == sorted(['CAD', 'CBBCAD'])
genome = OrfFinder('DDBDCCBCABBABBB')
assert sorted(genome.find('B', 'B')) == sorted(['BAB', 'BABB', 'BABBB', 'BB', 'BB', 'BB', 'BBAB', 'BBABB', 'BBABBB', 'BBB', 'BCAB', 'BCABB', 'BCABBAB', 'BCABBABB', 'BCABBABBB', 'BDCCB', 'BDCCBCAB', 'BDCCBCABB', 'BDCCBCABBAB', 'BDCCBCABBABB', 'BDCCBCABBABBB'])
genome = OrfFinder('BBCCDDCDAD')
assert sorted(genome.find('B', 'D')) == sorted(['BBCCD', 'BBCCDD', 'BBCCDDCD', 'BBCCDDCDAD', 'BCCD', 'BCCDD', 'BCCDDCD', 'BCCDDCDAD'])
genome = OrfFinder('BB')
assert sorted(genome.find('D', 'A')) == sorted([])
genome = OrfFinder('CCBCBDCACAABBAB')
assert sorted(genome.find('C', 'C')) == sorted(['CAC', 'CBC', 'CBCBDC', 'CBCBDCAC', 'CBDC', 'CBDCAC', 'CC', 'CCBC', 'CCBCBDC', 'CCBCBDCAC'])
genome = OrfFinder('ADAACABCDCADDCAADD')
assert sorted(genome.find('D', 'C')) == sorted(['DAAC', 'DAACABC', 'DAACABCDC', 'DAACABCDCADDC', 'DC', 'DC', 'DCADDC', 'DDC'])
genome = OrfFinder('BCDDABBDBBCDABDABDBC')
assert sorted(genome.find('C', 'A')) == sorted(['CDA', 'CDABDA', 'CDDA', 'CDDABBDBBCDA', 'CDDABBDBBCDABDA'])
genome = OrfFinder('ADDBBAABDDDCDBDABBBA')
assert sorted(genome.find('B', 'B')) == sorted(['BAAB', 'BAABDDDCDB', 'BAABDDDCDBDAB', 'BAABDDDCDBDABB', 'BAABDDDCDBDABBB', 'BB', 'BB', 'BB', 'BBAAB', 'BBAABDDDCDB', 'BBAABDDDCDBDAB', 'BBAABDDDCDBDABB', 'BBAABDDDCDBDABBB', 'BBB', 'BDAB', 'BDABB', 'BDABBB', 'BDDDCDB', 'BDDDCDBDAB', 'BDDDCDBDABB', 'BDDDCDBDABBB'])
genome = OrfFinder('DBACBBDCBCCBDABBBDC')
assert sorted(genome.find('D', 'B')) == sorted(['DAB', 'DABB', 'DABBB', 'DB', 'DBACB', 'DBACBB', 'DBACBBDCB', 'DBACBBDCBCCB', 'DBACBBDCBCCBDAB', 'DBACBBDCBCCBDABB', 'DBACBBDCBCCBDABBB', 'DCB', 'DCBCCB', 'DCBCCBDAB', 'DCBCCBDABB', 'DCBCCBDABBB'])
genome = OrfFinder('BBDA')
assert sorted(genome.find('B', 'A')) == sorted(['BBDA', 'BDA'])
genome = OrfFinder('CBADBCCB')
assert sorted(genome.find('C', 'C')) == sorted(['CBADBC', 'CBADBCC', 'CC'])
genome = OrfFinder('CDBCDDDADAC')
assert sorted(genome.find('B', 'C')) == sorted(['BC', 'BCDDDADAC'])
genome = OrfFinder('BCDDAABDCADAB')
assert sorted(genome.find('C', 'B')) == sorted(['CADAB', 'CDDAAB', 'CDDAABDCADAB'])
genome = OrfFinder('DDBDCCCBCCCDBC')
assert sorted(genome.find('C', 'C')) == sorted(['CBC', 'CBCC', 'CBCCC', 'CBCCCDBC', 'CC', 'CC', 'CC', 'CC', 'CCBC', 'CCBCC', 'CCBCCC', 'CCBCCCDBC', 'CCC', 'CCC', 'CCCBC', 'CCCBCC', 'CCCBCCC', 'CCCBCCCDBC', 'CCCDBC', 'CCDBC', 'CDBC'])









